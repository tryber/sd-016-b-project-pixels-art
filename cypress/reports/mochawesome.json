{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 34,
    "pending": 0,
    "failures": 7,
    "start": "2021-09-20T03:27:28.216Z",
    "end": "2021-09-20T03:28:35.344Z",
    "duration": 67128,
    "testsRegistered": 41,
    "passPercent": 82.92682926829268,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c55a03dc-4911-4691-98ed-0b4461583b2d",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d4c30a14-d79f-4a39-9332-3285b92d95b5",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 693,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "7c8bed28-dc49-4281-b726-27bc8ba4557d",
              "parentUUID": "d4c30a14-d79f-4a39-9332-3285b92d95b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c8bed28-dc49-4281-b726-27bc8ba4557d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 693,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b8c4bba6-bb32-45bc-a051-84e9e7be87db",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "c6b54891-2afe-44ee-ba15-b5e35b22d308",
              "parentUUID": "b8c4bba6-bb32-45bc-a051-84e9e7be87db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 411,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "2cba6b35-4808-4101-8b91-f0c4204613b9",
              "parentUUID": "b8c4bba6-bb32-45bc-a051-84e9e7be87db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 637,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "49b85c37-46c6-4c83-9aa8-80585a378897",
              "parentUUID": "b8c4bba6-bb32-45bc-a051-84e9e7be87db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 704,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "75020bc6-814d-426a-af81-b138273bb9b2",
              "parentUUID": "b8c4bba6-bb32-45bc-a051-84e9e7be87db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 399,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "95a0195d-4115-451a-9509-d42e52c5e123",
              "parentUUID": "b8c4bba6-bb32-45bc-a051-84e9e7be87db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "4b86aa76-8f14-428b-9be4-e6903a1a7e60",
              "parentUUID": "b8c4bba6-bb32-45bc-a051-84e9e7be87db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "2c9ea34c-6a82-4b28-b1ce-6d408fb1639e",
              "parentUUID": "b8c4bba6-bb32-45bc-a051-84e9e7be87db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c6b54891-2afe-44ee-ba15-b5e35b22d308",
            "2cba6b35-4808-4101-8b91-f0c4204613b9",
            "49b85c37-46c6-4c83-9aa8-80585a378897",
            "75020bc6-814d-426a-af81-b138273bb9b2",
            "95a0195d-4115-451a-9509-d42e52c5e123",
            "4b86aa76-8f14-428b-9be4-e6903a1a7e60",
            "2c9ea34c-6a82-4b28-b1ce-6d408fb1639e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3161,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8db31a78-ab72-4d1e-8b79-dff6b6a43fa6",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "eae02ee1-488e-49d1-81fd-cb72e730cd1f",
              "parentUUID": "8db31a78-ab72-4d1e-8b79-dff6b6a43fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "a7b6af39-b466-41e0-9d6e-94519caa19c3",
              "parentUUID": "8db31a78-ab72-4d1e-8b79-dff6b6a43fa6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eae02ee1-488e-49d1-81fd-cb72e730cd1f",
            "a7b6af39-b466-41e0-9d6e-94519caa19c3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 841,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c00ac7cc-597c-4f3b-abf3-0f40a6720f83",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "e463c6ea-7ce3-4004-ae81-0d0b1117e321",
              "parentUUID": "c00ac7cc-597c-4f3b-abf3-0f40a6720f83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "66b7fe80-863e-4b3f-857c-4ab11360fb7a",
              "parentUUID": "c00ac7cc-597c-4f3b-abf3-0f40a6720f83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 541,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "96d9d393-a415-4ea3-92ad-0250b689a538",
              "parentUUID": "c00ac7cc-597c-4f3b-abf3-0f40a6720f83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 339,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "ad85c927-5fa3-479c-a270-c2dcbb1f7e60",
              "parentUUID": "c00ac7cc-597c-4f3b-abf3-0f40a6720f83",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e463c6ea-7ce3-4004-ae81-0d0b1117e321",
            "66b7fe80-863e-4b3f-857c-4ab11360fb7a",
            "96d9d393-a415-4ea3-92ad-0250b689a538",
            "ad85c927-5fa3-479c-a270-c2dcbb1f7e60"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1598,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ebe2fe14-d13f-4aa4-b037-ee611ec243d9",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 1018,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "68e89bc8-9a26-494a-925e-75e54ce96aa1",
              "parentUUID": "ebe2fe14-d13f-4aa4-b037-ee611ec243d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 758,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "66172b85-7058-4c65-a1e2-982e0bddb0ef",
              "parentUUID": "ebe2fe14-d13f-4aa4-b037-ee611ec243d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "68e89bc8-9a26-494a-925e-75e54ce96aa1",
            "66172b85-7058-4c65-a1e2-982e0bddb0ef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1776,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "774ecf1b-34f8-49f6-9b31-163bafeda516",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 211,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "3d31d9ac-9902-4581-9f34-5b0152c10980",
              "parentUUID": "774ecf1b-34f8-49f6-9b31-163bafeda516",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "4e66739f-bc17-4378-82bd-4287a7d9a2c0",
              "parentUUID": "774ecf1b-34f8-49f6-9b31-163bafeda516",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d31d9ac-9902-4581-9f34-5b0152c10980",
            "4e66739f-bc17-4378-82bd-4287a7d9a2c0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 404,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eaf7e37d-e169-436d-985f-4a1b81ca5b49",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 633,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "9cdbcbfa-a198-4bd4-984a-6b0de1333b9e",
              "parentUUID": "eaf7e37d-e169-436d-985f-4a1b81ca5b49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8888,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "2cd023e9-d52f-4feb-9e36-ccb94debbe35",
              "parentUUID": "eaf7e37d-e169-436d-985f-4a1b81ca5b49",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9cdbcbfa-a198-4bd4-984a-6b0de1333b9e",
            "2cd023e9-d52f-4feb-9e36-ccb94debbe35"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9521,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d3ed6713-3c19-48ae-ab23-b25a55fce3be",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2362,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "3289c879-f234-450a-bc38-969f41ccc0de",
              "parentUUID": "d3ed6713-3c19-48ae-ab23-b25a55fce3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8756,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "726f9f5d-fc6c-43bb-b996-fa7e2ecca0ad",
              "parentUUID": "d3ed6713-3c19-48ae-ab23-b25a55fce3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 3394,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "aa00e947-d524-4bd5-ba10-cd01d07fa924",
              "parentUUID": "d3ed6713-3c19-48ae-ab23-b25a55fce3be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3289c879-f234-450a-bc38-969f41ccc0de",
            "726f9f5d-fc6c-43bb-b996-fa7e2ecca0ad",
            "aa00e947-d524-4bd5-ba10-cd01d07fa924"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14512,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8e697cc8-b77b-4b28-bccb-0b39984ea0de",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 875,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "b1988960-d594-43fe-ad1d-d8cbcd8a0596",
              "parentUUID": "8e697cc8-b77b-4b28-bccb-0b39984ea0de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 360,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "eb8ca67a-0391-4178-97af-ae097816fe12",
              "parentUUID": "8e697cc8-b77b-4b28-bccb-0b39984ea0de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 370,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "4f7ca73a-288b-48aa-96ba-900f4129f2a9",
              "parentUUID": "8e697cc8-b77b-4b28-bccb-0b39984ea0de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 3149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "50519706-09f3-449d-a12c-e77f1227a6cf",
              "parentUUID": "8e697cc8-b77b-4b28-bccb-0b39984ea0de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1988960-d594-43fe-ad1d-d8cbcd8a0596",
            "eb8ca67a-0391-4178-97af-ae097816fe12",
            "4f7ca73a-288b-48aa-96ba-900f4129f2a9",
            "50519706-09f3-449d-a12c-e77f1227a6cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4754,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "27d5ff79-226f-453b-a6b6-4351928e92e3",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 532,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "8234c757-6c2a-43e1-a285-54b855baf35c",
              "parentUUID": "27d5ff79-226f-453b-a6b6-4351928e92e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "66945190-d3b7-4257-86ac-f909cdf97cb7",
              "parentUUID": "27d5ff79-226f-453b-a6b6-4351928e92e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {},
              "uuid": "cbf32620-ced4-4a44-9742-1c618e968282",
              "parentUUID": "27d5ff79-226f-453b-a6b6-4351928e92e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 231,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "e7a5837e-4b19-411c-aed6-c95dca6462b8",
              "parentUUID": "27d5ff79-226f-453b-a6b6-4351928e92e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 658,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "02703d21-8629-49c8-83ae-f791c6d4367a",
              "parentUUID": "27d5ff79-226f-453b-a6b6-4351928e92e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 417,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "5f2c90c9-7757-407b-be65-9d4cae9fd104",
              "parentUUID": "27d5ff79-226f-453b-a6b6-4351928e92e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 1000,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:61693/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:61693/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:61693/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:61693/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:61693/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:61693/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:61693/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:61693/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:61693/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:61693/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:61693/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:61693/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:61693/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:61693/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0ac52f53-6efa-45c0-930a-c3f6fa9a5888",
              "parentUUID": "27d5ff79-226f-453b-a6b6-4351928e92e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 5562,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:61693/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:61693/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:61693/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:61693/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:61693/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:61693/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:61693/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:61693/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:61693/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:61693/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:61693/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:61693/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:61693/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cfc274ab-1f7d-4d50-8102-0185a4290c62",
              "parentUUID": "27d5ff79-226f-453b-a6b6-4351928e92e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 5294,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:61693/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:61693/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:61693/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:61693/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:61693/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:61693/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:61693/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:61693/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:61693/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:61693/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:61693/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:61693/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:61693/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "015ae8db-2fb5-4663-bf72-caa384ce08c4",
              "parentUUID": "27d5ff79-226f-453b-a6b6-4351928e92e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8234c757-6c2a-43e1-a285-54b855baf35c",
            "66945190-d3b7-4257-86ac-f909cdf97cb7",
            "cbf32620-ced4-4a44-9742-1c618e968282",
            "e7a5837e-4b19-411c-aed6-c95dca6462b8",
            "02703d21-8629-49c8-83ae-f791c6d4367a",
            "5f2c90c9-7757-407b-be65-9d4cae9fd104"
          ],
          "failures": [
            "0ac52f53-6efa-45c0-930a-c3f6fa9a5888",
            "cfc274ab-1f7d-4d50-8102-0185a4290c62",
            "015ae8db-2fb5-4663-bf72-caa384ce08c4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14261,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "552611ed-8033-422a-be08-bdc22ce8f1b5",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5323,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:61693/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:61693/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:61693/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:61693/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:61693/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:61693/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:61693/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:61693/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:61693/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:61693/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:61693/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:61693/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:61693/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a80c9162-ff8d-4c8a-ace8-872d6d261b75",
              "parentUUID": "552611ed-8033-422a-be08-bdc22ce8f1b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 784,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "3d0ed735-7e35-4020-92c0-ff54bb560bad",
              "parentUUID": "552611ed-8033-422a-be08-bdc22ce8f1b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5041,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:61693/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:61693/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:61693/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:61693/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:61693/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:61693/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:61693/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:61693/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:61693/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:61693/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:61693/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:61693/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:61693/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "19a7b058-ceb0-4c6a-b026-c8703843d64a",
              "parentUUID": "552611ed-8033-422a-be08-bdc22ce8f1b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d0ed735-7e35-4020-92c0-ff54bb560bad"
          ],
          "failures": [
            "a80c9162-ff8d-4c8a-ace8-872d6d261b75",
            "19a7b058-ceb0-4c6a-b026-c8703843d64a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 11148,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "46f6f625-42cb-4174-9537-9995909e0166",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1161,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:61693/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:61693/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:61693/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:61693/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:61693/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:61693/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:61693/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:61693/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:61693/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:61693/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:61693/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:61693/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:61693/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:61693/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "1771356e-e1f1-4aad-9c09-37a295e30126",
              "parentUUID": "46f6f625-42cb-4174-9537-9995909e0166",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 1313,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:61693/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:61693/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:61693/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:61693/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:61693/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:61693/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:61693/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:61693/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:61693/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:61693/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:61693/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:61693/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:61693/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:61693/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "4e402f7d-391f-4d59-975d-20c3d7d71669",
              "parentUUID": "46f6f625-42cb-4174-9537-9995909e0166",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1771356e-e1f1-4aad-9c09-37a295e30126",
            "4e402f7d-391f-4d59-975d-20c3d7d71669"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2474,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}
{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-20T17:10:56.073Z",
    "end": "2021-09-20T17:12:16.560Z",
    "duration": 80487,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5bbef740-7ddc-453e-920f-d3fe1049b1ce",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7d132522-b98b-42b0-893a-f75c1b0873cb",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "aed86ad9-2be4-4aec-b486-408863f3be0f",
              "parentUUID": "7d132522-b98b-42b0-893a-f75c1b0873cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aed86ad9-2be4-4aec-b486-408863f3be0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 147,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4c630069-804f-4ea1-8696-45ce37196cbc",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 74,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "07759126-49f3-40c0-bf4d-b5770b34a04f",
              "parentUUID": "4c630069-804f-4ea1-8696-45ce37196cbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "ee5dce9e-dcdb-44cb-a0f9-05258c1cfca8",
              "parentUUID": "4c630069-804f-4ea1-8696-45ce37196cbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "e2903914-54e8-4d67-af1f-8997eb18d2f8",
              "parentUUID": "4c630069-804f-4ea1-8696-45ce37196cbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "f422a47c-6113-4253-b1c1-fa4b092193b1",
              "parentUUID": "4c630069-804f-4ea1-8696-45ce37196cbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "43e72b9d-800d-4fb8-8ac9-94520976a2c5",
              "parentUUID": "4c630069-804f-4ea1-8696-45ce37196cbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "de7e5324-d912-4da9-998b-092af746845b",
              "parentUUID": "4c630069-804f-4ea1-8696-45ce37196cbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "79c0a55a-8868-46f3-9dd1-29202216259c",
              "parentUUID": "4c630069-804f-4ea1-8696-45ce37196cbc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "07759126-49f3-40c0-bf4d-b5770b34a04f",
            "ee5dce9e-dcdb-44cb-a0f9-05258c1cfca8",
            "e2903914-54e8-4d67-af1f-8997eb18d2f8",
            "f422a47c-6113-4253-b1c1-fa4b092193b1",
            "43e72b9d-800d-4fb8-8ac9-94520976a2c5",
            "de7e5324-d912-4da9-998b-092af746845b",
            "79c0a55a-8868-46f3-9dd1-29202216259c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 763,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4492c0f8-d183-42cf-ba39-31768147268b",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "16741352-7ed5-4931-a0d6-ce4a9b837553",
              "parentUUID": "4492c0f8-d183-42cf-ba39-31768147268b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "72b74284-3047-4ca4-9b0e-08507f3a1b22",
              "parentUUID": "4492c0f8-d183-42cf-ba39-31768147268b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16741352-7ed5-4931-a0d6-ce4a9b837553",
            "72b74284-3047-4ca4-9b0e-08507f3a1b22"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 254,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7d9e42fe-97db-40a8-9fa9-8aa494370467",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "726783e8-6710-470b-8c1c-196174607306",
              "parentUUID": "7d9e42fe-97db-40a8-9fa9-8aa494370467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "8f56b8c8-68a9-4201-92be-f8f82b51b545",
              "parentUUID": "7d9e42fe-97db-40a8-9fa9-8aa494370467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "c3e6438f-c7e7-4287-9c49-9860b511a156",
              "parentUUID": "7d9e42fe-97db-40a8-9fa9-8aa494370467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "d8dd5758-6029-4c43-af9e-4bc3789b432a",
              "parentUUID": "7d9e42fe-97db-40a8-9fa9-8aa494370467",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "726783e8-6710-470b-8c1c-196174607306",
            "8f56b8c8-68a9-4201-92be-f8f82b51b545",
            "c3e6438f-c7e7-4287-9c49-9860b511a156",
            "d8dd5758-6029-4c43-af9e-4bc3789b432a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 393,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a3dfb07d-2032-42a8-a013-e3c860375fdc",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "193ed1a3-dce9-443b-b34c-26768fa11a97",
              "parentUUID": "a3dfb07d-2032-42a8-a013-e3c860375fdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "c89f5086-c2f6-4879-94a1-97396ce6c9b0",
              "parentUUID": "a3dfb07d-2032-42a8-a013-e3c860375fdc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "193ed1a3-dce9-443b-b34c-26768fa11a97",
            "c89f5086-c2f6-4879-94a1-97396ce6c9b0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 491,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bf99d409-91c9-45cf-9c22-376cbb1fc0d2",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 74,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "cdc53c9b-671b-49d9-bae2-0255c82c2fec",
              "parentUUID": "bf99d409-91c9-45cf-9c22-376cbb1fc0d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "575db9d6-18bc-4be3-9b34-8e72b913f2c5",
              "parentUUID": "bf99d409-91c9-45cf-9c22-376cbb1fc0d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cdc53c9b-671b-49d9-bae2-0255c82c2fec",
            "575db9d6-18bc-4be3-9b34-8e72b913f2c5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 151,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "20863424-0842-4a1f-bae3-f5684425372f",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 477,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "9a9a6b5a-e3c5-4054-b59f-5a47366c4405",
              "parentUUID": "20863424-0842-4a1f-bae3-f5684425372f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "2896ca30-8be6-4a87-aaab-4e10b4e5f971",
              "parentUUID": "20863424-0842-4a1f-bae3-f5684425372f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9a9a6b5a-e3c5-4054-b59f-5a47366c4405",
            "2896ca30-8be6-4a87-aaab-4e10b4e5f971"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9615,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d6b6d8cc-a595-4e99-af4f-e29452e86f81",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "a6027a8d-72a1-4edc-9e00-7f72acd28632",
              "parentUUID": "d6b6d8cc-a595-4e99-af4f-e29452e86f81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "0b40a816-d3d2-461e-8dcd-3bd024272825",
              "parentUUID": "d6b6d8cc-a595-4e99-af4f-e29452e86f81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1617,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "c5082f60-e67c-404a-97f2-f29f796407c1",
              "parentUUID": "d6b6d8cc-a595-4e99-af4f-e29452e86f81",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6027a8d-72a1-4edc-9e00-7f72acd28632",
            "0b40a816-d3d2-461e-8dcd-3bd024272825",
            "c5082f60-e67c-404a-97f2-f29f796407c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13029,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "df4b9fbf-cb41-4bf4-a92d-0df52550dbf8",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "9544846b-28e0-49c2-9aca-223198a84e88",
              "parentUUID": "df4b9fbf-cb41-4bf4-a92d-0df52550dbf8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "626a28fe-4cd2-48a1-89d0-abf09281881e",
              "parentUUID": "df4b9fbf-cb41-4bf4-a92d-0df52550dbf8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 69,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "cc8201d0-01cd-42d6-951d-f9c8226f8503",
              "parentUUID": "df4b9fbf-cb41-4bf4-a92d-0df52550dbf8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2530,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "b71689ac-0c95-4df6-a443-160743c6e73e",
              "parentUUID": "df4b9fbf-cb41-4bf4-a92d-0df52550dbf8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9544846b-28e0-49c2-9aca-223198a84e88",
            "626a28fe-4cd2-48a1-89d0-abf09281881e",
            "cc8201d0-01cd-42d6-951d-f9c8226f8503",
            "b71689ac-0c95-4df6-a443-160743c6e73e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2804,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6a416ae6-9add-40e7-8bd4-8987fac6269e",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4315,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "41785c5c-35b1-4973-a444-4d0514a257cb",
              "parentUUID": "6a416ae6-9add-40e7-8bd4-8987fac6269e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4294,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "684f1856-c5c8-4695-bab4-a4bb1b744951",
              "parentUUID": "6a416ae6-9add-40e7-8bd4-8987fac6269e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4264,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6e89a67f-7117-449f-947e-324f967e510e",
              "parentUUID": "6a416ae6-9add-40e7-8bd4-8987fac6269e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4244,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0b09f7f3-35ab-4945-9f7c-ae7fc0078b37",
              "parentUUID": "6a416ae6-9add-40e7-8bd4-8987fac6269e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4292,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0820e69e-f7d9-4df0-a4f6-093c682bf809",
              "parentUUID": "6a416ae6-9add-40e7-8bd4-8987fac6269e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4237,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a691cb40-ad15-4f5e-86a5-6f7cc0d97a93",
              "parentUUID": "6a416ae6-9add-40e7-8bd4-8987fac6269e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4283,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0f7a68e5-7229-4f6e-bd84-cadc47ec771e",
              "parentUUID": "6a416ae6-9add-40e7-8bd4-8987fac6269e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4299,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "19e5cfbf-65e4-4c35-9136-b64c268a1a44",
              "parentUUID": "6a416ae6-9add-40e7-8bd4-8987fac6269e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4253,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7239351f-c61d-4df0-945c-38ba00c96635",
              "parentUUID": "6a416ae6-9add-40e7-8bd4-8987fac6269e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "41785c5c-35b1-4973-a444-4d0514a257cb",
            "684f1856-c5c8-4695-bab4-a4bb1b744951",
            "6e89a67f-7117-449f-947e-324f967e510e",
            "0b09f7f3-35ab-4945-9f7c-ae7fc0078b37",
            "0820e69e-f7d9-4df0-a4f6-093c682bf809",
            "a691cb40-ad15-4f5e-86a5-6f7cc0d97a93",
            "0f7a68e5-7229-4f6e-bd84-cadc47ec771e",
            "19e5cfbf-65e4-4c35-9136-b64c268a1a44",
            "7239351f-c61d-4df0-945c-38ba00c96635"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38481,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f457451c-4e82-437e-8ccf-42d97e185a1c",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4255,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d5ae6860-b136-4f13-901d-b8833f0d57b3",
              "parentUUID": "f457451c-4e82-437e-8ccf-42d97e185a1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4292,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b519ebd9-2a7c-444a-b985-33e8215fa631",
              "parentUUID": "f457451c-4e82-437e-8ccf-42d97e185a1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4266,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44269/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44269/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44269/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44269/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44269/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44269/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44269/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "04eb2340-2590-4986-8519-7c08942ddb51",
              "parentUUID": "f457451c-4e82-437e-8ccf-42d97e185a1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d5ae6860-b136-4f13-901d-b8833f0d57b3",
            "b519ebd9-2a7c-444a-b985-33e8215fa631",
            "04eb2340-2590-4986-8519-7c08942ddb51"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12813,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6bdea492-fc0e-40a7-ae85-ffeffadffb21",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 392,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44269/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44269/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44269/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44269/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44269/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44269/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44269/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44269/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44269/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "35212899-bc6c-4e9c-ab9e-aab358df9b20",
              "parentUUID": "6bdea492-fc0e-40a7-ae85-ffeffadffb21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 345,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44269/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44269/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44269/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44269/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44269/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44269/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44269/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44269/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44269/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44269/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44269/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44269/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44269/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "89812e40-998d-4ef1-9709-fc8458d50461",
              "parentUUID": "6bdea492-fc0e-40a7-ae85-ffeffadffb21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "35212899-bc6c-4e9c-ab9e-aab358df9b20",
            "89812e40-998d-4ef1-9709-fc8458d50461"
          ],
          "pending": [],
          "skipped": [],
          "duration": 737,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}
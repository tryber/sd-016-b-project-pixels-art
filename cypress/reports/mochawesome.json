{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-10-16T02:02:53.152Z",
    "end": "2021-10-16T02:04:27.002Z",
    "duration": 93850,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e75dba35-a747-454d-a74c-96976c025e1b",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ea7ef6be-f90c-4b41-8154-53ad0fe2a40a",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 621,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "ffb393a4-25e1-49e7-b4f8-794a2ee98beb",
              "parentUUID": "ea7ef6be-f90c-4b41-8154-53ad0fe2a40a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ffb393a4-25e1-49e7-b4f8-794a2ee98beb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 621,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2d248c1c-58ba-4f77-a3a4-62111c8ef73e",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 304,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "ab8509b2-93ca-4079-bd79-761693e08061",
              "parentUUID": "2d248c1c-58ba-4f77-a3a4-62111c8ef73e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "48db32d4-728e-4d45-b217-54c7c8a08b28",
              "parentUUID": "2d248c1c-58ba-4f77-a3a4-62111c8ef73e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 392,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "6346267f-bdbe-4510-99b2-6f90832844a1",
              "parentUUID": "2d248c1c-58ba-4f77-a3a4-62111c8ef73e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "08c3d4cf-7ac3-48d0-87b7-e2f64635c5a2",
              "parentUUID": "2d248c1c-58ba-4f77-a3a4-62111c8ef73e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "02e31c49-efb9-43e3-a1fa-0a9d2f31a5f8",
              "parentUUID": "2d248c1c-58ba-4f77-a3a4-62111c8ef73e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "8a5c9a1c-59c5-4ef3-89de-ab43fbe03ddb",
              "parentUUID": "2d248c1c-58ba-4f77-a3a4-62111c8ef73e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "33392ab8-97be-4e41-a7a1-71597db06683",
              "parentUUID": "2d248c1c-58ba-4f77-a3a4-62111c8ef73e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ab8509b2-93ca-4079-bd79-761693e08061",
            "48db32d4-728e-4d45-b217-54c7c8a08b28",
            "6346267f-bdbe-4510-99b2-6f90832844a1",
            "08c3d4cf-7ac3-48d0-87b7-e2f64635c5a2",
            "02e31c49-efb9-43e3-a1fa-0a9d2f31a5f8",
            "8a5c9a1c-59c5-4ef3-89de-ab43fbe03ddb",
            "33392ab8-97be-4e41-a7a1-71597db06683"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1788,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "10121412-943a-4569-b024-e0d7770f477c",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "cc9cb364-953c-4ee8-b116-a328cbc61450",
              "parentUUID": "10121412-943a-4569-b024-e0d7770f477c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 312,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "de883d17-22ff-4199-9601-658465608b88",
              "parentUUID": "10121412-943a-4569-b024-e0d7770f477c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc9cb364-953c-4ee8-b116-a328cbc61450",
            "de883d17-22ff-4199-9601-658465608b88"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 459,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3ae88ce4-870b-4a13-8a13-32307b623b6e",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "4aad3844-0e25-49cd-9592-3e44b774424f",
              "parentUUID": "3ae88ce4-870b-4a13-8a13-32307b623b6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "92033d3a-7724-4605-8289-932fd9fb1a95",
              "parentUUID": "3ae88ce4-870b-4a13-8a13-32307b623b6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 281,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "19ec5797-0b60-4c3b-b6e3-2ebc7a784480",
              "parentUUID": "3ae88ce4-870b-4a13-8a13-32307b623b6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "8fcafdbb-05f9-4cab-820f-9a56e1e47c52",
              "parentUUID": "3ae88ce4-870b-4a13-8a13-32307b623b6e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4aad3844-0e25-49cd-9592-3e44b774424f",
            "92033d3a-7724-4605-8289-932fd9fb1a95",
            "19ec5797-0b60-4c3b-b6e3-2ebc7a784480",
            "8fcafdbb-05f9-4cab-820f-9a56e1e47c52"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 850,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c0e8da17-a600-457d-9d3c-c88258782de9",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "56c3fc0b-7a31-45c7-908b-ab3552400d50",
              "parentUUID": "c0e8da17-a600-457d-9d3c-c88258782de9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 467,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "4f7eb589-c5e7-452d-9c04-f2a531ddf2d9",
              "parentUUID": "c0e8da17-a600-457d-9d3c-c88258782de9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "56c3fc0b-7a31-45c7-908b-ab3552400d50",
            "4f7eb589-c5e7-452d-9c04-f2a531ddf2d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 930,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b49b5b40-cf3f-45cc-b7f0-97f4a4d22637",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "41291133-0148-491a-98a1-a5da09615d9b",
              "parentUUID": "b49b5b40-cf3f-45cc-b7f0-97f4a4d22637",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "08ca1cb0-a4ed-441b-b7ab-8a9ab1610544",
              "parentUUID": "b49b5b40-cf3f-45cc-b7f0-97f4a4d22637",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "41291133-0148-491a-98a1-a5da09615d9b",
            "08ca1cb0-a4ed-441b-b7ab-8a9ab1610544"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 359,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "047e0183-0e8e-49a0-8ced-c86b46f12600",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 689,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "12bbd519-8f5b-4209-abad-537619395e2c",
              "parentUUID": "047e0183-0e8e-49a0-8ced-c86b46f12600",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 10160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "bf6ba2ac-60ec-4eaf-be95-169abaf1802e",
              "parentUUID": "047e0183-0e8e-49a0-8ced-c86b46f12600",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "12bbd519-8f5b-4209-abad-537619395e2c",
            "bf6ba2ac-60ec-4eaf-be95-169abaf1802e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10849,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "954b2c5b-070b-41c1-bccb-9fdfa3a83fbc",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2844,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "658eb68f-34d4-4cfe-8763-b418f25d701e",
              "parentUUID": "954b2c5b-070b-41c1-bccb-9fdfa3a83fbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9995,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "406c4e6f-c4ed-44e6-a293-19fd70c73b35",
              "parentUUID": "954b2c5b-070b-41c1-bccb-9fdfa3a83fbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "8763db90-6677-4d61-b646-84c476f72a7a",
              "parentUUID": "954b2c5b-070b-41c1-bccb-9fdfa3a83fbc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "658eb68f-34d4-4cfe-8763-b418f25d701e",
            "406c4e6f-c4ed-44e6-a293-19fd70c73b35",
            "8763db90-6677-4d61-b646-84c476f72a7a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15039,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ae9f27b6-3fd3-4ae4-ba1a-fda4c3629ea9",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "8ac3cf98-8535-46c5-840c-2b1b7d2d27c8",
              "parentUUID": "ae9f27b6-3fd3-4ae4-ba1a-fda4c3629ea9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "23e7e64a-0f89-4e4d-af56-68ba464031cd",
              "parentUUID": "ae9f27b6-3fd3-4ae4-ba1a-fda4c3629ea9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "8959e99e-b9bb-4f62-afe1-8932f3a5903a",
              "parentUUID": "ae9f27b6-3fd3-4ae4-ba1a-fda4c3629ea9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2974,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "aa32959a-2e67-4a03-ab8e-f94100626415",
              "parentUUID": "ae9f27b6-3fd3-4ae4-ba1a-fda4c3629ea9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ac3cf98-8535-46c5-840c-2b1b7d2d27c8",
            "23e7e64a-0f89-4e4d-af56-68ba464031cd",
            "8959e99e-b9bb-4f62-afe1-8932f3a5903a",
            "aa32959a-2e67-4a03-ab8e-f94100626415"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3542,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "934c5d69-3783-4317-b941-ac8ba78cec38",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4844,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6c562dbe-f965-4263-a622-5018816dd78c",
              "parentUUID": "934c5d69-3783-4317-b941-ac8ba78cec38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4429,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c6491394-5137-4284-90a5-cddf474f0d02",
              "parentUUID": "934c5d69-3783-4317-b941-ac8ba78cec38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4544,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2dd39c50-83ec-4fa7-be59-b1bae17945dc",
              "parentUUID": "934c5d69-3783-4317-b941-ac8ba78cec38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4555,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "161543fb-5679-442e-9a50-7cdedfbb3315",
              "parentUUID": "934c5d69-3783-4317-b941-ac8ba78cec38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4587,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d25ef154-96fc-4c17-9581-9f8acd35ec8a",
              "parentUUID": "934c5d69-3783-4317-b941-ac8ba78cec38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4619,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2e3fe723-37be-4e5a-afa4-7682c28ed2b6",
              "parentUUID": "934c5d69-3783-4317-b941-ac8ba78cec38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4520,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "85c01670-db83-46be-b8c3-8b074d4e6fd4",
              "parentUUID": "934c5d69-3783-4317-b941-ac8ba78cec38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4711,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1c0e1eda-6593-4761-8a38-69ab681278d9",
              "parentUUID": "934c5d69-3783-4317-b941-ac8ba78cec38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4888,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d4019c5b-f605-4e23-ac2b-b507c5d65107",
              "parentUUID": "934c5d69-3783-4317-b941-ac8ba78cec38",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6c562dbe-f965-4263-a622-5018816dd78c",
            "c6491394-5137-4284-90a5-cddf474f0d02",
            "2dd39c50-83ec-4fa7-be59-b1bae17945dc",
            "161543fb-5679-442e-9a50-7cdedfbb3315",
            "d25ef154-96fc-4c17-9581-9f8acd35ec8a",
            "2e3fe723-37be-4e5a-afa4-7682c28ed2b6",
            "85c01670-db83-46be-b8c3-8b074d4e6fd4",
            "1c0e1eda-6593-4761-8a38-69ab681278d9",
            "d4019c5b-f605-4e23-ac2b-b507c5d65107"
          ],
          "pending": [],
          "skipped": [],
          "duration": 41697,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d628008d-dabc-4e3a-90a0-a9d77baa1664",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4656,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "43d7309d-a471-4316-a551-8d26eb9b4c07",
              "parentUUID": "d628008d-dabc-4e3a-90a0-a9d77baa1664",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4695,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c5d92472-74b2-46a5-a6bb-4a99981a269e",
              "parentUUID": "d628008d-dabc-4e3a-90a0-a9d77baa1664",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4554,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41249/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41249/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41249/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41249/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41249/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41249/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9453175c-9dfb-4f06-bbf7-d9e5a6303837",
              "parentUUID": "d628008d-dabc-4e3a-90a0-a9d77baa1664",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "43d7309d-a471-4316-a551-8d26eb9b4c07",
            "c5d92472-74b2-46a5-a6bb-4a99981a269e",
            "9453175c-9dfb-4f06-bbf7-d9e5a6303837"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13905,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a9b78e71-9cc4-4314-be8d-e67a355a1f69",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 999,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:41249/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41249/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41249/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41249/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41249/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41249/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41249/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "54d6dcc3-57a0-40c0-b097-bd483d4ae655",
              "parentUUID": "a9b78e71-9cc4-4314-be8d-e67a355a1f69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 1150,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:41249/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41249/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41249/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41249/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41249/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41249/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41249/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41249/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41249/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41249/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41249/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41249/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "5e7e3853-8cb8-4ead-8e0c-5bf70bf1f9c4",
              "parentUUID": "a9b78e71-9cc4-4314-be8d-e67a355a1f69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "54d6dcc3-57a0-40c0-b097-bd483d4ae655",
            "5e7e3853-8cb8-4ead-8e0c-5bf70bf1f9c4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2149,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}
{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-21T13:52:19.228Z",
    "end": "2021-09-21T13:53:36.436Z",
    "duration": 77208,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cdcd41c7-43bc-4490-9ca4-3e33282f7d8c",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "11730728-e6d2-45b3-8835-4700446638aa",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "2062ea96-6946-474a-a9b1-a98d0b3f9624",
              "parentUUID": "11730728-e6d2-45b3-8835-4700446638aa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2062ea96-6946-474a-a9b1-a98d0b3f9624"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 114,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ee739a3d-e06f-4774-9a23-93c79fe50602",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 55,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "d46fc41c-f426-47f7-b498-fa5d38db4c8d",
              "parentUUID": "ee739a3d-e06f-4774-9a23-93c79fe50602",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "87c46f75-3f7b-4aec-a62c-41e1393102c6",
              "parentUUID": "ee739a3d-e06f-4774-9a23-93c79fe50602",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "3f8800ce-d0de-4952-97c5-2724f5dba71d",
              "parentUUID": "ee739a3d-e06f-4774-9a23-93c79fe50602",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 69,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "6acece29-55b5-4a62-89c0-d9532dc6d519",
              "parentUUID": "ee739a3d-e06f-4774-9a23-93c79fe50602",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "4779b8bf-ee89-4f99-8763-4b11e103795e",
              "parentUUID": "ee739a3d-e06f-4774-9a23-93c79fe50602",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "a6dc00f4-0b1e-4862-ba6f-6efc80177f36",
              "parentUUID": "ee739a3d-e06f-4774-9a23-93c79fe50602",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "7c7a69a2-6023-4edb-b27e-6a044ca65835",
              "parentUUID": "ee739a3d-e06f-4774-9a23-93c79fe50602",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d46fc41c-f426-47f7-b498-fa5d38db4c8d",
            "87c46f75-3f7b-4aec-a62c-41e1393102c6",
            "3f8800ce-d0de-4952-97c5-2724f5dba71d",
            "6acece29-55b5-4a62-89c0-d9532dc6d519",
            "4779b8bf-ee89-4f99-8763-4b11e103795e",
            "a6dc00f4-0b1e-4862-ba6f-6efc80177f36",
            "7c7a69a2-6023-4edb-b27e-6a044ca65835"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 490,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ddd54519-3532-4386-a7f5-6f9b71b6e45e",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "ef2a9598-77af-401b-98c8-a5dfb61ccb54",
              "parentUUID": "ddd54519-3532-4386-a7f5-6f9b71b6e45e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "bee85d92-2ff0-4c1a-ad27-5a1bf5d76953",
              "parentUUID": "ddd54519-3532-4386-a7f5-6f9b71b6e45e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef2a9598-77af-401b-98c8-a5dfb61ccb54",
            "bee85d92-2ff0-4c1a-ad27-5a1bf5d76953"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 193,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2ff07c17-c2a4-4bf5-af04-68e35699c78c",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 61,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "70b7c8d8-f703-448a-b558-859cd619527b",
              "parentUUID": "2ff07c17-c2a4-4bf5-af04-68e35699c78c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "285bf556-bd70-4d61-a473-fd623de1222b",
              "parentUUID": "2ff07c17-c2a4-4bf5-af04-68e35699c78c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "5b89d3d0-973b-4bee-913a-d0feb09b35e3",
              "parentUUID": "2ff07c17-c2a4-4bf5-af04-68e35699c78c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "15134ee5-f549-4eb6-84a1-a258bdb7f58d",
              "parentUUID": "2ff07c17-c2a4-4bf5-af04-68e35699c78c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70b7c8d8-f703-448a-b558-859cd619527b",
            "285bf556-bd70-4d61-a473-fd623de1222b",
            "5b89d3d0-973b-4bee-913a-d0feb09b35e3",
            "15134ee5-f549-4eb6-84a1-a258bdb7f58d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 292,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6eb71fdb-8e8a-4353-a615-d45235a88c8f",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "7a98a95e-a0c5-47f3-8a43-c9baec9ed2c9",
              "parentUUID": "6eb71fdb-8e8a-4353-a615-d45235a88c8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "b8fba2de-0071-4752-8356-be99212a6d0c",
              "parentUUID": "6eb71fdb-8e8a-4353-a615-d45235a88c8f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7a98a95e-a0c5-47f3-8a43-c9baec9ed2c9",
            "b8fba2de-0071-4752-8356-be99212a6d0c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 332,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5b6545a3-724d-4a56-bb9e-90d1841c27f8",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 50,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "3e5caf84-fe8a-4973-9825-1e785c1329ce",
              "parentUUID": "5b6545a3-724d-4a56-bb9e-90d1841c27f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 53,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "863b7535-043e-4563-9eac-c6243c49d27f",
              "parentUUID": "5b6545a3-724d-4a56-bb9e-90d1841c27f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e5caf84-fe8a-4973-9825-1e785c1329ce",
            "863b7535-043e-4563-9eac-c6243c49d27f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 103,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "65553189-f7a2-4529-9e10-6dd544844a42",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "cd8d3aed-93e0-4e3c-bfa3-0fd39047c681",
              "parentUUID": "65553189-f7a2-4529-9e10-6dd544844a42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8829,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "16da1648-be4c-48be-859e-40bc4c97fafa",
              "parentUUID": "65553189-f7a2-4529-9e10-6dd544844a42",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cd8d3aed-93e0-4e3c-bfa3-0fd39047c681",
            "16da1648-be4c-48be-859e-40bc4c97fafa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9257,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b7d84e15-5149-4ef1-92bf-078b12a827bc",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "1c62955b-f8cc-44a4-8c52-52aa863f1b00",
              "parentUUID": "b7d84e15-5149-4ef1-92bf-078b12a827bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8754,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "d54791b1-3648-4acd-a56e-a5cbadcdb35d",
              "parentUUID": "b7d84e15-5149-4ef1-92bf-078b12a827bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "5f1b91cd-23c4-497d-a989-53b67fbe68e7",
              "parentUUID": "b7d84e15-5149-4ef1-92bf-078b12a827bc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c62955b-f8cc-44a4-8c52-52aa863f1b00",
            "d54791b1-3648-4acd-a56e-a5cbadcdb35d",
            "5f1b91cd-23c4-497d-a989-53b67fbe68e7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12145,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7220f0e4-541b-41a4-a894-2311443c1b77",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "c82ebe51-e5d6-4a5b-962e-815666d0be2a",
              "parentUUID": "7220f0e4-541b-41a4-a894-2311443c1b77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 65,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "6f9f7165-aedb-4650-8b8f-314cadd6e827",
              "parentUUID": "7220f0e4-541b-41a4-a894-2311443c1b77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "bc36ea19-a5ff-44bf-bada-fdde69f68ede",
              "parentUUID": "7220f0e4-541b-41a4-a894-2311443c1b77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "7f67778f-59c6-410a-868b-566a9f3dee41",
              "parentUUID": "7220f0e4-541b-41a4-a894-2311443c1b77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c82ebe51-e5d6-4a5b-962e-815666d0be2a",
            "6f9f7165-aedb-4650-8b8f-314cadd6e827",
            "bc36ea19-a5ff-44bf-bada-fdde69f68ede",
            "7f67778f-59c6-410a-868b-566a9f3dee41"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2649,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b2cbd625-da96-4c39-a492-660d8b45f66b",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4205,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39633/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39633/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39633/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39633/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39633/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39633/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39633/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39633/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39633/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8cf4dd18-0d57-47de-9d9f-8291c3c900ec",
              "parentUUID": "b2cbd625-da96-4c39-a492-660d8b45f66b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4171,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39633/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39633/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39633/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39633/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39633/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39633/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39633/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39633/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39633/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9f1414a1-e213-4f5e-8976-825dc9be7f87",
              "parentUUID": "b2cbd625-da96-4c39-a492-660d8b45f66b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4179,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39633/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39633/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39633/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39633/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39633/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39633/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39633/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39633/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39633/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "420e9690-c2b2-4128-8d9a-7902c888d2da",
              "parentUUID": "b2cbd625-da96-4c39-a492-660d8b45f66b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4173,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39633/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39633/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39633/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39633/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39633/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39633/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39633/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39633/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39633/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c10c7c7d-f7b0-470a-8578-2cd0b33058c8",
              "parentUUID": "b2cbd625-da96-4c39-a492-660d8b45f66b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4188,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39633/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39633/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39633/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39633/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39633/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39633/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39633/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39633/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39633/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e08a7edf-ab3c-4a8b-b7cb-48b73a98ce17",
              "parentUUID": "b2cbd625-da96-4c39-a492-660d8b45f66b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4270,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39633/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39633/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39633/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39633/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39633/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39633/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39633/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39633/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39633/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "81579395-94ef-4807-a4c9-db60dfa95e8e",
              "parentUUID": "b2cbd625-da96-4c39-a492-660d8b45f66b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4220,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39633/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39633/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39633/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39633/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39633/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39633/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39633/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39633/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39633/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fea25257-2cf5-4435-bfc0-82a938c87c05",
              "parentUUID": "b2cbd625-da96-4c39-a492-660d8b45f66b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4211,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39633/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39633/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39633/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39633/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39633/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39633/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39633/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39633/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39633/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d414f030-6a6d-4361-b8a6-2c1826302f3d",
              "parentUUID": "b2cbd625-da96-4c39-a492-660d8b45f66b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4212,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39633/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39633/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39633/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39633/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39633/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39633/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39633/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39633/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39633/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "336214c5-0298-463b-8a57-3bc244a64c19",
              "parentUUID": "b2cbd625-da96-4c39-a492-660d8b45f66b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8cf4dd18-0d57-47de-9d9f-8291c3c900ec",
            "9f1414a1-e213-4f5e-8976-825dc9be7f87",
            "420e9690-c2b2-4128-8d9a-7902c888d2da",
            "c10c7c7d-f7b0-470a-8578-2cd0b33058c8",
            "e08a7edf-ab3c-4a8b-b7cb-48b73a98ce17",
            "81579395-94ef-4807-a4c9-db60dfa95e8e",
            "fea25257-2cf5-4435-bfc0-82a938c87c05",
            "d414f030-6a6d-4361-b8a6-2c1826302f3d",
            "336214c5-0298-463b-8a57-3bc244a64c19"
          ],
          "pending": [],
          "skipped": [],
          "duration": 37829,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bb61eab2-d68b-4ac0-afaf-412077f0ce2b",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4241,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39633/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39633/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39633/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39633/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39633/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39633/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39633/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39633/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39633/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d504c6f1-aee4-4614-9b69-a8392851ecce",
              "parentUUID": "bb61eab2-d68b-4ac0-afaf-412077f0ce2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4249,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39633/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39633/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39633/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39633/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39633/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39633/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39633/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39633/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39633/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9e7005e6-db11-420f-bbd2-9783ce95f2c5",
              "parentUUID": "bb61eab2-d68b-4ac0-afaf-412077f0ce2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4227,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39633/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39633/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39633/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39633/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39633/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39633/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39633/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39633/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39633/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39633/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e7f28cc5-3630-4db5-8d52-6f1fbab6c4c6",
              "parentUUID": "bb61eab2-d68b-4ac0-afaf-412077f0ce2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d504c6f1-aee4-4614-9b69-a8392851ecce",
            "9e7005e6-db11-420f-bbd2-9783ce95f2c5",
            "e7f28cc5-3630-4db5-8d52-6f1fbab6c4c6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12717,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d5e6cc7c-5daf-448e-a892-d12be9246b42",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 257,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39633/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39633/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39633/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39633/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39633/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39633/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39633/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39633/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39633/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39633/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39633/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39633/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "cfd726d7-364a-4653-a4f4-b9ed3ded0caa",
              "parentUUID": "d5e6cc7c-5daf-448e-a892-d12be9246b42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 220,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39633/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39633/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39633/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39633/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39633/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39633/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39633/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39633/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39633/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39633/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39633/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39633/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39633/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "5e214ede-4b41-46d3-95e6-7aedce29c5e4",
              "parentUUID": "d5e6cc7c-5daf-448e-a892-d12be9246b42",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cfd726d7-364a-4653-a4f4-b9ed3ded0caa",
            "5e214ede-4b41-46d3-95e6-7aedce29c5e4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 477,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}
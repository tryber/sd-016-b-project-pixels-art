{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-21T01:52:28.447Z",
    "end": "2021-09-21T01:53:50.287Z",
    "duration": 81840,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "090ee7e6-97be-4e4a-9e38-0c9304d54066",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4c0b3ff7-5bf6-46ce-9781-e24b3ee3efb0",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "5f34a02b-b56a-47b0-98de-ec22c26875c3",
              "parentUUID": "4c0b3ff7-5bf6-46ce-9781-e24b3ee3efb0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f34a02b-b56a-47b0-98de-ec22c26875c3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2e4033f9-d2ea-4f9a-ae2e-851d0d8b1a52",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "eaf57ca8-d500-41ae-814f-0a3485c1fb16",
              "parentUUID": "2e4033f9-d2ea-4f9a-ae2e-851d0d8b1a52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "37345c9e-0c3e-4e07-974c-e8cb2de99ec9",
              "parentUUID": "2e4033f9-d2ea-4f9a-ae2e-851d0d8b1a52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "5d585c8e-9eb5-4c38-ac6b-6ff9a1da8080",
              "parentUUID": "2e4033f9-d2ea-4f9a-ae2e-851d0d8b1a52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "641c78f1-cf2f-4b1e-ba1b-5a171aacf8bf",
              "parentUUID": "2e4033f9-d2ea-4f9a-ae2e-851d0d8b1a52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "163a6194-b936-4f94-950d-14be1d01d65c",
              "parentUUID": "2e4033f9-d2ea-4f9a-ae2e-851d0d8b1a52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "4c7c74af-2ac0-4c2b-b065-62e45866c901",
              "parentUUID": "2e4033f9-d2ea-4f9a-ae2e-851d0d8b1a52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "875e26b8-046c-49c1-939f-eb4f656d5d2a",
              "parentUUID": "2e4033f9-d2ea-4f9a-ae2e-851d0d8b1a52",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eaf57ca8-d500-41ae-814f-0a3485c1fb16",
            "37345c9e-0c3e-4e07-974c-e8cb2de99ec9",
            "5d585c8e-9eb5-4c38-ac6b-6ff9a1da8080",
            "641c78f1-cf2f-4b1e-ba1b-5a171aacf8bf",
            "163a6194-b936-4f94-950d-14be1d01d65c",
            "4c7c74af-2ac0-4c2b-b065-62e45866c901",
            "875e26b8-046c-49c1-939f-eb4f656d5d2a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 901,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5b7c1f1e-86ca-454c-965f-90a02f159794",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b53007c3-d761-44d2-900f-f26f91836eed",
              "parentUUID": "5b7c1f1e-86ca-454c-965f-90a02f159794",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "d301eb94-3109-422f-82e1-f2dfd9790ff5",
              "parentUUID": "5b7c1f1e-86ca-454c-965f-90a02f159794",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b53007c3-d761-44d2-900f-f26f91836eed",
            "d301eb94-3109-422f-82e1-f2dfd9790ff5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 316,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c9c1f097-7c7b-4bd8-98be-9bd2be867586",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "16d105e8-7a41-40d6-aefd-a87e4ee572e9",
              "parentUUID": "c9c1f097-7c7b-4bd8-98be-9bd2be867586",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "6a9d007e-ccb9-49e2-ac17-8a6644ad21fb",
              "parentUUID": "c9c1f097-7c7b-4bd8-98be-9bd2be867586",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "8d8e2c38-5984-4e9e-ab13-f63cf34087b2",
              "parentUUID": "c9c1f097-7c7b-4bd8-98be-9bd2be867586",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "be406dfe-e761-4f3a-b0f7-5822fec02cec",
              "parentUUID": "c9c1f097-7c7b-4bd8-98be-9bd2be867586",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16d105e8-7a41-40d6-aefd-a87e4ee572e9",
            "6a9d007e-ccb9-49e2-ac17-8a6644ad21fb",
            "8d8e2c38-5984-4e9e-ab13-f63cf34087b2",
            "be406dfe-e761-4f3a-b0f7-5822fec02cec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 512,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fe91312f-63bc-482c-b39a-15ea51be5563",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 317,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "4194f2f8-b8ff-4ec3-aa95-ecb5b1891af2",
              "parentUUID": "fe91312f-63bc-482c-b39a-15ea51be5563",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "269a10f4-37d6-401a-aa54-08a79dd9a5ba",
              "parentUUID": "fe91312f-63bc-482c-b39a-15ea51be5563",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4194f2f8-b8ff-4ec3-aa95-ecb5b1891af2",
            "269a10f4-37d6-401a-aa54-08a79dd9a5ba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 626,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "008cf996-eeb4-438b-900d-a9c75b91d460",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "410ac371-3617-4410-8bb8-a99e2897f412",
              "parentUUID": "008cf996-eeb4-438b-900d-a9c75b91d460",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "7fa92f14-f0dc-41a7-b866-d2185f59da63",
              "parentUUID": "008cf996-eeb4-438b-900d-a9c75b91d460",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "410ac371-3617-4410-8bb8-a99e2897f412",
            "7fa92f14-f0dc-41a7-b866-d2185f59da63"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 160,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d34f0014-7631-4ee9-aecf-f0c750ee1c1e",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 456,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "837140dd-f802-4f7d-a915-e57b07bdbb94",
              "parentUUID": "d34f0014-7631-4ee9-aecf-f0c750ee1c1e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "bb4c1307-6409-4f1d-a94f-1526dd252847",
              "parentUUID": "d34f0014-7631-4ee9-aecf-f0c750ee1c1e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "837140dd-f802-4f7d-a915-e57b07bdbb94",
            "bb4c1307-6409-4f1d-a94f-1526dd252847"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9644,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8c6fc076-3b74-4c24-afda-3fd39a6c042e",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2333,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "b6e506bb-3521-4ff0-8f40-3d7632aded49",
              "parentUUID": "8c6fc076-3b74-4c24-afda-3fd39a6c042e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "7570d987-a0a8-443b-ab76-adc36b86492c",
              "parentUUID": "8c6fc076-3b74-4c24-afda-3fd39a6c042e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1718,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "e265d5bb-2771-40be-afab-2786680198a7",
              "parentUUID": "8c6fc076-3b74-4c24-afda-3fd39a6c042e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b6e506bb-3521-4ff0-8f40-3d7632aded49",
            "7570d987-a0a8-443b-ab76-adc36b86492c",
            "e265d5bb-2771-40be-afab-2786680198a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13168,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b53e7f21-d334-46f0-940a-014d5cc44270",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "50eace81-3112-4079-8831-25d8868314bb",
              "parentUUID": "b53e7f21-d334-46f0-940a-014d5cc44270",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "c422f4d5-21eb-410d-b72e-c1a8bd24aa4d",
              "parentUUID": "b53e7f21-d334-46f0-940a-014d5cc44270",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "56c2ba35-742e-4322-8691-59d9dffaeb0b",
              "parentUUID": "b53e7f21-d334-46f0-940a-014d5cc44270",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "533577f8-295e-43c4-b719-1acbebe57388",
              "parentUUID": "b53e7f21-d334-46f0-940a-014d5cc44270",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50eace81-3112-4079-8831-25d8868314bb",
            "c422f4d5-21eb-410d-b72e-c1a8bd24aa4d",
            "56c2ba35-742e-4322-8691-59d9dffaeb0b",
            "533577f8-295e-43c4-b719-1acbebe57388"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2814,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "24ee7cdb-738a-48a6-a6f2-3bd3f14a8fac",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4332,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "38c2cb63-1b2c-4e63-896a-5bbf4d4ec23c",
              "parentUUID": "24ee7cdb-738a-48a6-a6f2-3bd3f14a8fac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4336,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "33f09fa2-b421-4c22-a72a-13a13982a060",
              "parentUUID": "24ee7cdb-738a-48a6-a6f2-3bd3f14a8fac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4297,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e7bad048-e8a7-4eb0-a963-5bbf24deabb7",
              "parentUUID": "24ee7cdb-738a-48a6-a6f2-3bd3f14a8fac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4317,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "805f79d9-c810-4ce1-81e5-73a5d2a9cf2c",
              "parentUUID": "24ee7cdb-738a-48a6-a6f2-3bd3f14a8fac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4303,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6d69af8f-8cdc-4ab4-b7a2-636865c72ec7",
              "parentUUID": "24ee7cdb-738a-48a6-a6f2-3bd3f14a8fac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4303,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2f73eb2c-132e-4790-9a2f-07a7362f20ac",
              "parentUUID": "24ee7cdb-738a-48a6-a6f2-3bd3f14a8fac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4298,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b7c6575c-be7c-4397-bbec-7d5470f991ba",
              "parentUUID": "24ee7cdb-738a-48a6-a6f2-3bd3f14a8fac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4319,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9334ae91-0d70-479c-be80-c0d76761d9c7",
              "parentUUID": "24ee7cdb-738a-48a6-a6f2-3bd3f14a8fac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4309,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "63aa38eb-1838-4137-af6f-5cbb16e8cf48",
              "parentUUID": "24ee7cdb-738a-48a6-a6f2-3bd3f14a8fac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "38c2cb63-1b2c-4e63-896a-5bbf4d4ec23c",
            "33f09fa2-b421-4c22-a72a-13a13982a060",
            "e7bad048-e8a7-4eb0-a963-5bbf24deabb7",
            "805f79d9-c810-4ce1-81e5-73a5d2a9cf2c",
            "6d69af8f-8cdc-4ab4-b7a2-636865c72ec7",
            "2f73eb2c-132e-4790-9a2f-07a7362f20ac",
            "b7c6575c-be7c-4397-bbec-7d5470f991ba",
            "9334ae91-0d70-479c-be80-c0d76761d9c7",
            "63aa38eb-1838-4137-af6f-5cbb16e8cf48"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38814,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a37f4f4d-404e-44af-a39d-956aa4214cd2",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4317,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c5f31705-c027-45ca-960b-074d2ab3c9b1",
              "parentUUID": "a37f4f4d-404e-44af-a39d-956aa4214cd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4317,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e078c8ef-9562-42c9-9d41-fe26c8443e19",
              "parentUUID": "a37f4f4d-404e-44af-a39d-956aa4214cd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4328,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "17c56838-4d5a-45a6-8809-0defefa213f1",
              "parentUUID": "a37f4f4d-404e-44af-a39d-956aa4214cd2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c5f31705-c027-45ca-960b-074d2ab3c9b1",
            "e078c8ef-9562-42c9-9d41-fe26c8443e19",
            "17c56838-4d5a-45a6-8809-0defefa213f1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12962,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "71f82363-4ee3-487c-9f9c-9513b626f1bb",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 412,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:41469/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41469/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41469/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41469/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41469/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41469/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41469/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41469/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41469/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "7da37f41-adc8-4977-ab7c-35c63530f0fd",
              "parentUUID": "71f82363-4ee3-487c-9f9c-9513b626f1bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 351,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:41469/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41469/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41469/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41469/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41469/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41469/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41469/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41469/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41469/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "483920bf-9e65-4f96-a057-6780b81b51a9",
              "parentUUID": "71f82363-4ee3-487c-9f9c-9513b626f1bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7da37f41-adc8-4977-ab7c-35c63530f0fd",
            "483920bf-9e65-4f96-a057-6780b81b51a9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 763,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}
{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-18T20:23:09.347Z",
    "end": "2021-09-18T20:24:34.272Z",
    "duration": 84925,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "328dea46-9497-49a2-9a93-2b6e853bc3c6",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "444c0358-0446-49ac-89aa-5fd3d0f8d433",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "e8c9a7c2-1a5b-458f-be23-fbc8589cd664",
              "parentUUID": "444c0358-0446-49ac-89aa-5fd3d0f8d433",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e8c9a7c2-1a5b-458f-be23-fbc8589cd664"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 232,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1ab0f807-9c90-462b-bc7e-67ff580b98e5",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "429b70d7-5114-4dcb-ab4c-5d4d2f1cb0f5",
              "parentUUID": "1ab0f807-9c90-462b-bc7e-67ff580b98e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "c8ca90ed-8772-4a1b-b013-61d32308904b",
              "parentUUID": "1ab0f807-9c90-462b-bc7e-67ff580b98e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "93876f90-b61c-4828-8602-21729444a8db",
              "parentUUID": "1ab0f807-9c90-462b-bc7e-67ff580b98e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "8d9f4240-dcf1-48b5-990d-8a39f9da9c0c",
              "parentUUID": "1ab0f807-9c90-462b-bc7e-67ff580b98e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "88dae15d-c95b-4a22-8365-14e1c60c2b9a",
              "parentUUID": "1ab0f807-9c90-462b-bc7e-67ff580b98e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "a45f1bf7-e111-4a0f-9780-d18066659c07",
              "parentUUID": "1ab0f807-9c90-462b-bc7e-67ff580b98e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "e0dd92fc-1164-426f-a207-f370c24f1c2a",
              "parentUUID": "1ab0f807-9c90-462b-bc7e-67ff580b98e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "429b70d7-5114-4dcb-ab4c-5d4d2f1cb0f5",
            "c8ca90ed-8772-4a1b-b013-61d32308904b",
            "93876f90-b61c-4828-8602-21729444a8db",
            "8d9f4240-dcf1-48b5-990d-8a39f9da9c0c",
            "88dae15d-c95b-4a22-8365-14e1c60c2b9a",
            "a45f1bf7-e111-4a0f-9780-d18066659c07",
            "e0dd92fc-1164-426f-a207-f370c24f1c2a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1376,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "62a858ca-560d-4358-93e2-3ed4a95538d8",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "22ad576e-2cfe-49f2-a4a2-bf365aaee5a1",
              "parentUUID": "62a858ca-560d-4358-93e2-3ed4a95538d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "68d52c65-2e98-4d87-8372-46c0c9a2cc52",
              "parentUUID": "62a858ca-560d-4358-93e2-3ed4a95538d8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "22ad576e-2cfe-49f2-a4a2-bf365aaee5a1",
            "68d52c65-2e98-4d87-8372-46c0c9a2cc52"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 374,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "99182abd-1e71-4447-b659-c611045cda80",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "66c17dcf-67f3-4290-98fb-a63d61cbec5b",
              "parentUUID": "99182abd-1e71-4447-b659-c611045cda80",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "e12d4ecb-0bf0-44c4-b6c3-c565f2cb1b24",
              "parentUUID": "99182abd-1e71-4447-b659-c611045cda80",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "75ffdb2e-77e2-4723-b169-e70263523d18",
              "parentUUID": "99182abd-1e71-4447-b659-c611045cda80",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "1ae711c5-c819-40ba-aae7-9b22faae8876",
              "parentUUID": "99182abd-1e71-4447-b659-c611045cda80",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66c17dcf-67f3-4290-98fb-a63d61cbec5b",
            "e12d4ecb-0bf0-44c4-b6c3-c565f2cb1b24",
            "75ffdb2e-77e2-4723-b169-e70263523d18",
            "1ae711c5-c819-40ba-aae7-9b22faae8876"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 628,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d429c298-5113-4885-a2b0-64fdab1097c1",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 398,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "8b5eff28-b8a7-47ae-bc01-615ddaa3368c",
              "parentUUID": "d429c298-5113-4885-a2b0-64fdab1097c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 365,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "a6e158b9-e970-4527-bcf2-ea6088649247",
              "parentUUID": "d429c298-5113-4885-a2b0-64fdab1097c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b5eff28-b8a7-47ae-bc01-615ddaa3368c",
            "a6e158b9-e970-4527-bcf2-ea6088649247"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 763,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c33354b5-d4bf-48c3-ba5d-ccdceffd6046",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d9ed306e-5bb4-499f-aedd-449a6483e2ad",
              "parentUUID": "c33354b5-d4bf-48c3-ba5d-ccdceffd6046",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "d2996a55-1317-439a-8347-bac3f294add0",
              "parentUUID": "c33354b5-d4bf-48c3-ba5d-ccdceffd6046",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d9ed306e-5bb4-499f-aedd-449a6483e2ad",
            "d2996a55-1317-439a-8347-bac3f294add0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 276,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5e6bacf7-1801-4d8d-b4e1-9016c7b2e025",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "cb0d0b1e-26a5-42df-a20a-44aae9a50b23",
              "parentUUID": "5e6bacf7-1801-4d8d-b4e1-9016c7b2e025",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8826,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "84432f92-b264-4bbe-8e43-af28333cd858",
              "parentUUID": "5e6bacf7-1801-4d8d-b4e1-9016c7b2e025",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cb0d0b1e-26a5-42df-a20a-44aae9a50b23",
            "84432f92-b264-4bbe-8e43-af28333cd858"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9314,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d1201e25-0c6e-4fa7-a60b-ccae1451d954",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "a01c7723-fa5a-42b7-a441-7837daa8da5b",
              "parentUUID": "d1201e25-0c6e-4fa7-a60b-ccae1451d954",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8844,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "90632758-0c02-4c1c-a5ec-eebe84cf7863",
              "parentUUID": "d1201e25-0c6e-4fa7-a60b-ccae1451d954",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1647,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "efa91f0d-e9c0-4fba-b51f-332ecde1594a",
              "parentUUID": "d1201e25-0c6e-4fa7-a60b-ccae1451d954",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a01c7723-fa5a-42b7-a441-7837daa8da5b",
            "90632758-0c02-4c1c-a5ec-eebe84cf7863",
            "efa91f0d-e9c0-4fba-b51f-332ecde1594a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12811,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8bacab84-5519-4515-b74b-ec1cdeabe274",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "0b71522f-a3fb-4e70-b746-ae056ae8b5af",
              "parentUUID": "8bacab84-5519-4515-b74b-ec1cdeabe274",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "3e210080-13c5-4c56-a90c-e0462c5556bd",
              "parentUUID": "8bacab84-5519-4515-b74b-ec1cdeabe274",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "610d3cc8-4d6c-4505-a16a-d462bcf3707f",
              "parentUUID": "8bacab84-5519-4515-b74b-ec1cdeabe274",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "590b004b-29bc-4b9f-a115-9781d740a4e0",
              "parentUUID": "8bacab84-5519-4515-b74b-ec1cdeabe274",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b71522f-a3fb-4e70-b746-ae056ae8b5af",
            "3e210080-13c5-4c56-a90c-e0462c5556bd",
            "610d3cc8-4d6c-4505-a16a-d462bcf3707f",
            "590b004b-29bc-4b9f-a115-9781d740a4e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2855,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d0ad856e-3248-40ee-9691-5123659934fb",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4408,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42413/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42413/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42413/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42413/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42413/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42413/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42413/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42413/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42413/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "60b12aa1-df61-4316-98f0-8f0d5e4c9ee8",
              "parentUUID": "d0ad856e-3248-40ee-9691-5123659934fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4478,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42413/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42413/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42413/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42413/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42413/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42413/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42413/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42413/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42413/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4a8bd466-f789-4e8d-9aab-a5a34466de39",
              "parentUUID": "d0ad856e-3248-40ee-9691-5123659934fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4407,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42413/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42413/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42413/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42413/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42413/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42413/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42413/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42413/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42413/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "79d9a7f3-3162-4a9c-a950-51ff0e668ee7",
              "parentUUID": "d0ad856e-3248-40ee-9691-5123659934fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4530,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42413/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42413/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42413/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42413/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42413/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42413/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42413/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42413/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42413/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "80f63a5c-436a-45e5-a57f-8f229792e6d8",
              "parentUUID": "d0ad856e-3248-40ee-9691-5123659934fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4523,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42413/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42413/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42413/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42413/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42413/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42413/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42413/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42413/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42413/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5e11d8f5-d935-49ea-b6bc-1edfc1c35c5b",
              "parentUUID": "d0ad856e-3248-40ee-9691-5123659934fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4505,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42413/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42413/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42413/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42413/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42413/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42413/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42413/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42413/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42413/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "90a05a82-6ad1-4994-ac76-bf0015918fb1",
              "parentUUID": "d0ad856e-3248-40ee-9691-5123659934fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4410,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42413/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42413/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42413/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42413/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42413/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42413/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42413/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42413/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42413/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "47b014a2-f860-4129-8b6c-12dd851658c6",
              "parentUUID": "d0ad856e-3248-40ee-9691-5123659934fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4442,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42413/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42413/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42413/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42413/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42413/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42413/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42413/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42413/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42413/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1e82e9b4-e20c-4027-85d1-215cd30f43a2",
              "parentUUID": "d0ad856e-3248-40ee-9691-5123659934fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4455,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42413/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42413/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42413/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42413/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42413/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42413/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42413/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42413/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42413/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "909dcec6-1f78-4ebf-bb16-0ce7d2894875",
              "parentUUID": "d0ad856e-3248-40ee-9691-5123659934fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "60b12aa1-df61-4316-98f0-8f0d5e4c9ee8",
            "4a8bd466-f789-4e8d-9aab-a5a34466de39",
            "79d9a7f3-3162-4a9c-a950-51ff0e668ee7",
            "80f63a5c-436a-45e5-a57f-8f229792e6d8",
            "5e11d8f5-d935-49ea-b6bc-1edfc1c35c5b",
            "90a05a82-6ad1-4994-ac76-bf0015918fb1",
            "47b014a2-f860-4129-8b6c-12dd851658c6",
            "1e82e9b4-e20c-4027-85d1-215cd30f43a2",
            "909dcec6-1f78-4ebf-bb16-0ce7d2894875"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40158,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cfe97026-3310-48cb-8205-cb5f06446802",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4611,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42413/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42413/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42413/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42413/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42413/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42413/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42413/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42413/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42413/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "63d5d0c8-5fe8-4211-9dd0-1b2a5a88f42c",
              "parentUUID": "cfe97026-3310-48cb-8205-cb5f06446802",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4607,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42413/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42413/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42413/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42413/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42413/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42413/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42413/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42413/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42413/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "885d1864-f4e0-4136-86d5-7e88cbf4710d",
              "parentUUID": "cfe97026-3310-48cb-8205-cb5f06446802",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4651,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42413/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42413/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42413/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42413/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42413/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42413/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42413/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42413/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42413/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42413/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "caaf6c07-1414-40f4-a005-9443b4903ae6",
              "parentUUID": "cfe97026-3310-48cb-8205-cb5f06446802",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "63d5d0c8-5fe8-4211-9dd0-1b2a5a88f42c",
            "885d1864-f4e0-4136-86d5-7e88cbf4710d",
            "caaf6c07-1414-40f4-a005-9443b4903ae6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13869,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fb97c0b6-9798-409f-9617-bed2dbf5c6cc",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 632,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:42413/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:42413/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:42413/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:42413/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:42413/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:42413/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:42413/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:42413/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42413/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42413/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:42413/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42413/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "8e6c9808-a778-43a7-89ab-7e78c0aa1143",
              "parentUUID": "fb97c0b6-9798-409f-9617-bed2dbf5c6cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 416,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:42413/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:42413/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:42413/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:42413/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:42413/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:42413/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:42413/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:42413/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42413/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42413/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:42413/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42413/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42413/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "e836937c-9700-4037-be7e-2be155f331bf",
              "parentUUID": "fb97c0b6-9798-409f-9617-bed2dbf5c6cc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8e6c9808-a778-43a7-89ab-7e78c0aa1143",
            "e836937c-9700-4037-be7e-2be155f331bf"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1048,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}
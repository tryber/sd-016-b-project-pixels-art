{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-20T12:46:01.964Z",
    "end": "2021-09-20T12:47:25.355Z",
    "duration": 83391,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2f9845b9-a96f-407f-a593-83d9f9febce1",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2bf5aabf-5118-4aed-b3d4-baae99d23102",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 251,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "0d963cb0-181e-482e-b476-8247a43ffb45",
              "parentUUID": "2bf5aabf-5118-4aed-b3d4-baae99d23102",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0d963cb0-181e-482e-b476-8247a43ffb45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 251,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a5c0d400-fcf5-404a-972c-578bebed6f53",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "a407c4e2-ec13-4ae8-9da2-cfe2a52b3b53",
              "parentUUID": "a5c0d400-fcf5-404a-972c-578bebed6f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "fb62d8fd-c716-4e2c-b051-a5096365554a",
              "parentUUID": "a5c0d400-fcf5-404a-972c-578bebed6f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 239,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "5155b3a6-410b-44b9-9007-37561f8bd9fe",
              "parentUUID": "a5c0d400-fcf5-404a-972c-578bebed6f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "d877e0d5-c30b-4c33-9320-e22eac67c323",
              "parentUUID": "a5c0d400-fcf5-404a-972c-578bebed6f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "3f5dc37e-9238-4c9d-bd0b-b194188aa6d9",
              "parentUUID": "a5c0d400-fcf5-404a-972c-578bebed6f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "30198eb6-059c-4f35-b153-57331a96b002",
              "parentUUID": "a5c0d400-fcf5-404a-972c-578bebed6f53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "39f91e1a-0dcf-4de2-9c94-d471f3cefcd1",
              "parentUUID": "a5c0d400-fcf5-404a-972c-578bebed6f53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a407c4e2-ec13-4ae8-9da2-cfe2a52b3b53",
            "fb62d8fd-c716-4e2c-b051-a5096365554a",
            "5155b3a6-410b-44b9-9007-37561f8bd9fe",
            "d877e0d5-c30b-4c33-9320-e22eac67c323",
            "3f5dc37e-9238-4c9d-bd0b-b194188aa6d9",
            "30198eb6-059c-4f35-b153-57331a96b002",
            "39f91e1a-0dcf-4de2-9c94-d471f3cefcd1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1332,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5cd89800-f618-46cb-8da5-2446c7e28fbb",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d05fa830-c454-4425-b656-ff96afb233de",
              "parentUUID": "5cd89800-f618-46cb-8da5-2446c7e28fbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "591717d7-aba1-4386-aca5-bf23701ad2f1",
              "parentUUID": "5cd89800-f618-46cb-8da5-2446c7e28fbb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d05fa830-c454-4425-b656-ff96afb233de",
            "591717d7-aba1-4386-aca5-bf23701ad2f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 381,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "db3a18f0-d41d-48d4-b69d-6d35d8eac299",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "0087ddec-0ffe-4cd9-90a8-6377f3a30fdd",
              "parentUUID": "db3a18f0-d41d-48d4-b69d-6d35d8eac299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "0ef81067-8550-432a-9da4-3cca5fca2628",
              "parentUUID": "db3a18f0-d41d-48d4-b69d-6d35d8eac299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "4862e3ec-c469-4aec-9346-54f677b359a0",
              "parentUUID": "db3a18f0-d41d-48d4-b69d-6d35d8eac299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "22859ad3-1bb3-4540-b881-03a1950c9ea3",
              "parentUUID": "db3a18f0-d41d-48d4-b69d-6d35d8eac299",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0087ddec-0ffe-4cd9-90a8-6377f3a30fdd",
            "0ef81067-8550-432a-9da4-3cca5fca2628",
            "4862e3ec-c469-4aec-9346-54f677b359a0",
            "22859ad3-1bb3-4540-b881-03a1950c9ea3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 656,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9602c051-3e75-4d4a-b179-e7eeda886bc6",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 342,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "27becd48-72a1-45fe-b189-1e95be195c04",
              "parentUUID": "9602c051-3e75-4d4a-b179-e7eeda886bc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "603e16a4-9288-4689-855c-a67c2817903f",
              "parentUUID": "9602c051-3e75-4d4a-b179-e7eeda886bc6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "27becd48-72a1-45fe-b189-1e95be195c04",
            "603e16a4-9288-4689-855c-a67c2817903f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 663,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f49f1a28-b560-478f-9c23-6e8a0429285d",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "8c6e9b29-4a43-41a5-a2e0-6b2d1de4df45",
              "parentUUID": "f49f1a28-b560-478f-9c23-6e8a0429285d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "b89f8ed6-5343-46c8-b515-e79af00b3146",
              "parentUUID": "f49f1a28-b560-478f-9c23-6e8a0429285d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c6e9b29-4a43-41a5-a2e0-6b2d1de4df45",
            "b89f8ed6-5343-46c8-b515-e79af00b3146"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 232,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9e5d3c82-6da5-4807-873b-bd4cb2e1c2ff",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 554,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "64e5113c-bcf8-42f7-9570-36b1299b59c9",
              "parentUUID": "9e5d3c82-6da5-4807-873b-bd4cb2e1c2ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "9f307664-010e-4ea3-80df-e2f64b2c7920",
              "parentUUID": "9e5d3c82-6da5-4807-873b-bd4cb2e1c2ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "64e5113c-bcf8-42f7-9570-36b1299b59c9",
            "9f307664-010e-4ea3-80df-e2f64b2c7920"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9853,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0105d90c-ee2c-4fed-80bd-29429c1dfae8",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2412,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "e41d0aa3-5d3d-4d71-92c9-c00feca4de92",
              "parentUUID": "0105d90c-ee2c-4fed-80bd-29429c1dfae8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9064,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "917c4981-e018-4ceb-8899-08a843fddafb",
              "parentUUID": "0105d90c-ee2c-4fed-80bd-29429c1dfae8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1712,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "02f8b289-c6bd-4e0e-9585-cdac509c5e6f",
              "parentUUID": "0105d90c-ee2c-4fed-80bd-29429c1dfae8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e41d0aa3-5d3d-4d71-92c9-c00feca4de92",
            "917c4981-e018-4ceb-8899-08a843fddafb",
            "02f8b289-c6bd-4e0e-9585-cdac509c5e6f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13188,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f7fbc8ea-c39a-4b12-9d7c-202918f75273",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "5b9f34c0-50a6-439f-8283-755ed47ec59c",
              "parentUUID": "f7fbc8ea-c39a-4b12-9d7c-202918f75273",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "3faee425-2eec-46d6-9699-75387f107945",
              "parentUUID": "f7fbc8ea-c39a-4b12-9d7c-202918f75273",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 69,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "4974b25e-a5fc-4b84-bfc6-635d48f71f9f",
              "parentUUID": "f7fbc8ea-c39a-4b12-9d7c-202918f75273",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2433,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "c3cf8614-6459-4f44-9600-828f2882df40",
              "parentUUID": "f7fbc8ea-c39a-4b12-9d7c-202918f75273",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b9f34c0-50a6-439f-8283-755ed47ec59c",
            "3faee425-2eec-46d6-9699-75387f107945",
            "4974b25e-a5fc-4b84-bfc6-635d48f71f9f",
            "c3cf8614-6459-4f44-9600-828f2882df40"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2727,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b552b6e7-bd8e-4dd2-8d72-9fd3f410140c",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4333,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b7f2a538-eedd-4b8b-a4f9-062cde1f80ca",
              "parentUUID": "b552b6e7-bd8e-4dd2-8d72-9fd3f410140c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4320,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "afd6f015-8f71-4cc9-8533-820cb4bd20d3",
              "parentUUID": "b552b6e7-bd8e-4dd2-8d72-9fd3f410140c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4320,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2054c1a4-fa30-4f8a-bfbf-327aea6bcbb8",
              "parentUUID": "b552b6e7-bd8e-4dd2-8d72-9fd3f410140c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4306,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "32afaa46-a95e-4524-9e2e-c1120b7dc7cc",
              "parentUUID": "b552b6e7-bd8e-4dd2-8d72-9fd3f410140c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4476,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b533d48b-1b6a-46a8-9f05-4cc60d48fd14",
              "parentUUID": "b552b6e7-bd8e-4dd2-8d72-9fd3f410140c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4435,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "65766dc4-02bf-4ce7-bb11-32c82170bb1d",
              "parentUUID": "b552b6e7-bd8e-4dd2-8d72-9fd3f410140c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4414,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4a2d70df-728a-43c8-a4d1-44ab308ae3a7",
              "parentUUID": "b552b6e7-bd8e-4dd2-8d72-9fd3f410140c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4323,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c2e9713f-e179-42b1-bd94-d83e72bb0baa",
              "parentUUID": "b552b6e7-bd8e-4dd2-8d72-9fd3f410140c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4304,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ea47c7ac-a866-4469-aadc-4e769d87d16b",
              "parentUUID": "b552b6e7-bd8e-4dd2-8d72-9fd3f410140c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b7f2a538-eedd-4b8b-a4f9-062cde1f80ca",
            "afd6f015-8f71-4cc9-8533-820cb4bd20d3",
            "2054c1a4-fa30-4f8a-bfbf-327aea6bcbb8",
            "32afaa46-a95e-4524-9e2e-c1120b7dc7cc",
            "b533d48b-1b6a-46a8-9f05-4cc60d48fd14",
            "65766dc4-02bf-4ce7-bb11-32c82170bb1d",
            "4a2d70df-728a-43c8-a4d1-44ab308ae3a7",
            "c2e9713f-e179-42b1-bd94-d83e72bb0baa",
            "ea47c7ac-a866-4469-aadc-4e769d87d16b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39231,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "60c2d705-be4d-4ac8-b938-8b1dc2bab3eb",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4282,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9caf3576-f965-497e-8570-77d6842c8fc6",
              "parentUUID": "60c2d705-be4d-4ac8-b938-8b1dc2bab3eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4284,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a6aa85b2-56b3-4491-82ca-1490ab8e1923",
              "parentUUID": "60c2d705-be4d-4ac8-b938-8b1dc2bab3eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4449,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35469/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35469/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35469/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35469/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35469/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35469/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35469/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6af1cd70-5616-4a41-a97b-f9dae5ccaf15",
              "parentUUID": "60c2d705-be4d-4ac8-b938-8b1dc2bab3eb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9caf3576-f965-497e-8570-77d6842c8fc6",
            "a6aa85b2-56b3-4491-82ca-1490ab8e1923",
            "6af1cd70-5616-4a41-a97b-f9dae5ccaf15"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13015,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "19bf2034-4ca2-4ed0-9ee4-d8e969d9fb34",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 418,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35469/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35469/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35469/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35469/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35469/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35469/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35469/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35469/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35469/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "dc0cb0b0-9bad-427f-9342-5d526cae0173",
              "parentUUID": "19bf2034-4ca2-4ed0-9ee4-d8e969d9fb34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 369,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35469/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35469/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35469/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35469/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35469/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35469/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35469/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35469/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35469/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35469/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35469/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35469/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35469/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "407cb4f9-517e-4ab4-a95f-f1b384945f69",
              "parentUUID": "19bf2034-4ca2-4ed0-9ee4-d8e969d9fb34",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "dc0cb0b0-9bad-427f-9342-5d526cae0173",
            "407cb4f9-517e-4ab4-a95f-f1b384945f69"
          ],
          "pending": [],
          "skipped": [],
          "duration": 787,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}
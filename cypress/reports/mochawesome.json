{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-20T00:08:51.223Z",
    "end": "2021-09-20T00:10:11.969Z",
    "duration": 80746,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7fed9f44-a06f-4694-bc05-32d1657ef95b",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1a0ae6b7-4f94-4d22-ad95-47a8a9e11f4c",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "d801f9c5-5ef9-468d-b6b6-32b453794af9",
              "parentUUID": "1a0ae6b7-4f94-4d22-ad95-47a8a9e11f4c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d801f9c5-5ef9-468d-b6b6-32b453794af9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 171,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "acc60db1-4368-45c6-b4b2-4a12b0a6049b",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "709d7e3e-a033-46d3-a3e3-23df8030bb73",
              "parentUUID": "acc60db1-4368-45c6-b4b2-4a12b0a6049b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "5ba8f144-3ed1-4494-9d0f-44baff4d654c",
              "parentUUID": "acc60db1-4368-45c6-b4b2-4a12b0a6049b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "6d676343-1851-462c-8b5f-2f30087a2bc9",
              "parentUUID": "acc60db1-4368-45c6-b4b2-4a12b0a6049b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "1612cfe9-f161-44fa-a62e-5f2c3e1fb82d",
              "parentUUID": "acc60db1-4368-45c6-b4b2-4a12b0a6049b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "9e005855-9417-4959-904f-c96c46c0418e",
              "parentUUID": "acc60db1-4368-45c6-b4b2-4a12b0a6049b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "a1214625-4d56-4387-83c8-13730936d606",
              "parentUUID": "acc60db1-4368-45c6-b4b2-4a12b0a6049b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "6f7df227-459d-4a12-b690-21c009aac9db",
              "parentUUID": "acc60db1-4368-45c6-b4b2-4a12b0a6049b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "709d7e3e-a033-46d3-a3e3-23df8030bb73",
            "5ba8f144-3ed1-4494-9d0f-44baff4d654c",
            "6d676343-1851-462c-8b5f-2f30087a2bc9",
            "1612cfe9-f161-44fa-a62e-5f2c3e1fb82d",
            "9e005855-9417-4959-904f-c96c46c0418e",
            "a1214625-4d56-4387-83c8-13730936d606",
            "6f7df227-459d-4a12-b690-21c009aac9db"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1091,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b4176d30-8002-402f-994c-64945f665c4f",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "c6989e47-a4c3-43eb-bda4-ac795fe06f7b",
              "parentUUID": "b4176d30-8002-402f-994c-64945f665c4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "90c6dcda-dccc-4337-87e4-da5a31a06259",
              "parentUUID": "b4176d30-8002-402f-994c-64945f665c4f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c6989e47-a4c3-43eb-bda4-ac795fe06f7b",
            "90c6dcda-dccc-4337-87e4-da5a31a06259"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 374,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fe329868-f6ec-4713-a1df-1bfb211d01f1",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "f8ca9cb1-77e8-493a-9244-5c6fd5822f71",
              "parentUUID": "fe329868-f6ec-4713-a1df-1bfb211d01f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "36c2b9e0-a6f4-4b1e-9848-556767029270",
              "parentUUID": "fe329868-f6ec-4713-a1df-1bfb211d01f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "b8b1fcd9-48bf-4f85-b577-f6c8d84db3fd",
              "parentUUID": "fe329868-f6ec-4713-a1df-1bfb211d01f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "080d5116-d883-4da2-8962-29aceb4ca540",
              "parentUUID": "fe329868-f6ec-4713-a1df-1bfb211d01f1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8ca9cb1-77e8-493a-9244-5c6fd5822f71",
            "36c2b9e0-a6f4-4b1e-9848-556767029270",
            "b8b1fcd9-48bf-4f85-b577-f6c8d84db3fd",
            "080d5116-d883-4da2-8962-29aceb4ca540"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 579,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6165949a-21d3-45e2-8a12-f9fde176731b",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "d2ce5509-aaf4-42ba-adce-7dc98f712536",
              "parentUUID": "6165949a-21d3-45e2-8a12-f9fde176731b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 266,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "f25abfa8-7379-47d1-8b71-9f72efec7a66",
              "parentUUID": "6165949a-21d3-45e2-8a12-f9fde176731b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2ce5509-aaf4-42ba-adce-7dc98f712536",
            "f25abfa8-7379-47d1-8b71-9f72efec7a66"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 584,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "27a2e225-b25d-4bef-9bb2-f5052a989c5e",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f7e02d09-455e-4841-a415-dfe84a68f5b0",
              "parentUUID": "27a2e225-b25d-4bef-9bb2-f5052a989c5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "b7df94ef-85e2-40d5-aee5-48669ba8a645",
              "parentUUID": "27a2e225-b25d-4bef-9bb2-f5052a989c5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7e02d09-455e-4841-a415-dfe84a68f5b0",
            "b7df94ef-85e2-40d5-aee5-48669ba8a645"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 199,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f5be6859-7020-47ef-b0a3-201d4baa1b9f",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 517,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "310e09e4-d388-4fa3-b8a3-c282ca2c5934",
              "parentUUID": "f5be6859-7020-47ef-b0a3-201d4baa1b9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "7c29fbef-1dc5-4a5b-8111-32c185854e7e",
              "parentUUID": "f5be6859-7020-47ef-b0a3-201d4baa1b9f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "310e09e4-d388-4fa3-b8a3-c282ca2c5934",
            "7c29fbef-1dc5-4a5b-8111-32c185854e7e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9335,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4c387096-381e-4b3d-94c3-55f7858cfaef",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "c44aa0e0-3cff-460d-b7fa-ba79aa3bdd48",
              "parentUUID": "4c387096-381e-4b3d-94c3-55f7858cfaef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8619,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "126b0fa1-9cfb-4c94-ab02-3e98159bf96e",
              "parentUUID": "4c387096-381e-4b3d-94c3-55f7858cfaef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1454,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "3dec8030-ad7d-4ffb-9bc6-8f374a56efde",
              "parentUUID": "4c387096-381e-4b3d-94c3-55f7858cfaef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c44aa0e0-3cff-460d-b7fa-ba79aa3bdd48",
            "126b0fa1-9cfb-4c94-ab02-3e98159bf96e",
            "3dec8030-ad7d-4ffb-9bc6-8f374a56efde"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12282,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "80994068-30cf-42b1-b4a9-462daab8e81e",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "51f0c7c6-b30e-4e92-8a9c-28d50d074cfb",
              "parentUUID": "80994068-30cf-42b1-b4a9-462daab8e81e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "cd68ae3a-d117-43ae-956b-dcff5580b168",
              "parentUUID": "80994068-30cf-42b1-b4a9-462daab8e81e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "c79de4d5-057c-46d2-8d99-c06500ed0a07",
              "parentUUID": "80994068-30cf-42b1-b4a9-462daab8e81e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "f17f861b-86f9-49db-8197-49e4ce70e434",
              "parentUUID": "80994068-30cf-42b1-b4a9-462daab8e81e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51f0c7c6-b30e-4e92-8a9c-28d50d074cfb",
            "cd68ae3a-d117-43ae-956b-dcff5580b168",
            "c79de4d5-057c-46d2-8d99-c06500ed0a07",
            "f17f861b-86f9-49db-8197-49e4ce70e434"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2752,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e39d7d18-d637-454c-ae3f-055096df4b9e",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4396,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39857/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39857/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39857/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39857/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39857/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39857/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39857/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39857/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39857/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a19b3a27-6819-4004-8c08-dedcf45a2513",
              "parentUUID": "e39d7d18-d637-454c-ae3f-055096df4b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4292,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39857/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39857/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39857/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39857/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39857/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39857/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39857/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39857/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39857/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b3bf4c99-e451-4e59-9db2-f1a1db963544",
              "parentUUID": "e39d7d18-d637-454c-ae3f-055096df4b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4264,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39857/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39857/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39857/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39857/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39857/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39857/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39857/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39857/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39857/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "67efda9a-bd3b-4ff3-9b89-acd06cbed574",
              "parentUUID": "e39d7d18-d637-454c-ae3f-055096df4b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4330,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39857/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39857/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39857/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39857/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39857/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39857/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39857/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39857/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39857/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "167b1fcb-e2a2-4c7e-af0f-201cc84d541e",
              "parentUUID": "e39d7d18-d637-454c-ae3f-055096df4b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4291,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39857/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39857/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39857/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39857/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39857/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39857/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39857/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39857/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39857/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d9fd4d21-5e2d-4177-a677-012b1e24ed0d",
              "parentUUID": "e39d7d18-d637-454c-ae3f-055096df4b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4265,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39857/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39857/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39857/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39857/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39857/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39857/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39857/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39857/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39857/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4a5145a5-38ef-463e-b000-2c88fe955e72",
              "parentUUID": "e39d7d18-d637-454c-ae3f-055096df4b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4370,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39857/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39857/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39857/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39857/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39857/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39857/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39857/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39857/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39857/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e7f6f0c1-4d90-487f-9a89-c382363fa166",
              "parentUUID": "e39d7d18-d637-454c-ae3f-055096df4b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4290,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39857/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39857/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39857/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39857/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39857/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39857/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39857/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39857/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39857/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "00712d62-a4b3-44a5-a6bc-fb6c628e680d",
              "parentUUID": "e39d7d18-d637-454c-ae3f-055096df4b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4304,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39857/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39857/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39857/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39857/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39857/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39857/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39857/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39857/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39857/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fed8d51e-01f5-4625-ada1-19a3e37be5e7",
              "parentUUID": "e39d7d18-d637-454c-ae3f-055096df4b9e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a19b3a27-6819-4004-8c08-dedcf45a2513",
            "b3bf4c99-e451-4e59-9db2-f1a1db963544",
            "67efda9a-bd3b-4ff3-9b89-acd06cbed574",
            "167b1fcb-e2a2-4c7e-af0f-201cc84d541e",
            "d9fd4d21-5e2d-4177-a677-012b1e24ed0d",
            "4a5145a5-38ef-463e-b000-2c88fe955e72",
            "e7f6f0c1-4d90-487f-9a89-c382363fa166",
            "00712d62-a4b3-44a5-a6bc-fb6c628e680d",
            "fed8d51e-01f5-4625-ada1-19a3e37be5e7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38802,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fa7f7af4-298a-484a-abd6-9dbd31cd475e",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4347,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39857/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39857/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39857/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39857/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39857/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39857/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39857/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39857/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39857/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0382f029-6882-4884-83f4-10c725ebdb5d",
              "parentUUID": "fa7f7af4-298a-484a-abd6-9dbd31cd475e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4265,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39857/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39857/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39857/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39857/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39857/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39857/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39857/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39857/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39857/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e399819d-ecc3-4b52-bca0-5ef9159b561a",
              "parentUUID": "fa7f7af4-298a-484a-abd6-9dbd31cd475e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4319,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39857/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39857/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39857/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39857/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39857/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39857/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39857/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39857/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39857/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39857/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3cc2edad-35c3-471d-a3a8-928becd5af73",
              "parentUUID": "fa7f7af4-298a-484a-abd6-9dbd31cd475e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0382f029-6882-4884-83f4-10c725ebdb5d",
            "e399819d-ecc3-4b52-bca0-5ef9159b561a",
            "3cc2edad-35c3-471d-a3a8-928becd5af73"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12931,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a2576ee5-3505-46dd-97b7-4a10ddb8b869",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 307,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39857/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39857/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39857/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39857/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39857/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39857/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39857/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39857/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39857/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39857/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39857/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39857/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "f7a39d39-0ab9-42fc-960f-86f13b59fad6",
              "parentUUID": "a2576ee5-3505-46dd-97b7-4a10ddb8b869",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 326,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39857/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39857/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39857/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39857/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39857/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39857/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39857/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39857/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39857/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39857/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39857/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39857/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39857/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "5a218e10-08a8-42a4-94a6-90aec9855d01",
              "parentUUID": "a2576ee5-3505-46dd-97b7-4a10ddb8b869",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f7a39d39-0ab9-42fc-960f-86f13b59fad6",
            "5a218e10-08a8-42a4-94a6-90aec9855d01"
          ],
          "pending": [],
          "skipped": [],
          "duration": 633,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}
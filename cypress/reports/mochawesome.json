{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 33,
    "pending": 0,
    "failures": 8,
    "start": "2021-09-23T01:13:59.220Z",
    "end": "2021-09-23T01:14:59.542Z",
    "duration": 60322,
    "testsRegistered": 41,
    "passPercent": 80.48780487804879,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "397cafae-5d00-4f5e-8053-038c73081c1c",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f697b23b-4c83-4022-832c-6490f5fb023b",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 352,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "76ba6c99-ae8d-4c8e-8f90-435aa9582c0d",
              "parentUUID": "f697b23b-4c83-4022-832c-6490f5fb023b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "76ba6c99-ae8d-4c8e-8f90-435aa9582c0d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 352,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "90a0e70c-3fbb-403f-9c91-6d9a04625722",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 264,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "7e612cc0-7010-43e0-9bf9-e795693dd756",
              "parentUUID": "90a0e70c-3fbb-403f-9c91-6d9a04625722",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 376,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "7c0afa40-1203-4190-8a22-537a85f80095",
              "parentUUID": "90a0e70c-3fbb-403f-9c91-6d9a04625722",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 324,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "3ae4ec87-e6cb-4653-96c7-102048e1d4eb",
              "parentUUID": "90a0e70c-3fbb-403f-9c91-6d9a04625722",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "e362a6e5-8cee-42fb-984c-45527eb5d9a6",
              "parentUUID": "90a0e70c-3fbb-403f-9c91-6d9a04625722",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "7d777184-b598-4b7a-8514-d71be3e42663",
              "parentUUID": "90a0e70c-3fbb-403f-9c91-6d9a04625722",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "d47cd9cd-97d1-41b5-9453-25a79f625297",
              "parentUUID": "90a0e70c-3fbb-403f-9c91-6d9a04625722",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "b6010987-17d0-418a-be66-35a904e58bcf",
              "parentUUID": "90a0e70c-3fbb-403f-9c91-6d9a04625722",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e612cc0-7010-43e0-9bf9-e795693dd756",
            "7c0afa40-1203-4190-8a22-537a85f80095",
            "3ae4ec87-e6cb-4653-96c7-102048e1d4eb",
            "e362a6e5-8cee-42fb-984c-45527eb5d9a6",
            "7d777184-b598-4b7a-8514-d71be3e42663",
            "d47cd9cd-97d1-41b5-9453-25a79f625297",
            "b6010987-17d0-418a-be66-35a904e58bcf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1694,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "719cd272-0fc7-4148-8314-8f986b22f8f4",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d2977f91-3b0b-4ca5-ab1c-6d60587cebee",
              "parentUUID": "719cd272-0fc7-4148-8314-8f986b22f8f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 322,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "d7b46941-cbd5-414d-8c01-b504e84997ff",
              "parentUUID": "719cd272-0fc7-4148-8314-8f986b22f8f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2977f91-3b0b-4ca5-ab1c-6d60587cebee",
            "d7b46941-cbd5-414d-8c01-b504e84997ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 525,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7df83c2c-ab63-45f7-8510-e1d14b5d429e",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "b22aef8d-bf36-4034-95fa-dc9d8cb81e45",
              "parentUUID": "7df83c2c-ab63-45f7-8510-e1d14b5d429e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 228,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "6a6824a4-3930-4d77-b64a-23c3272205ab",
              "parentUUID": "7df83c2c-ab63-45f7-8510-e1d14b5d429e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 323,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "7d2a2e3f-6a4c-4f6c-9b93-5bbd4b5fd347",
              "parentUUID": "7df83c2c-ab63-45f7-8510-e1d14b5d429e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "f240d199-07de-4e58-a07f-9edf71e22111",
              "parentUUID": "7df83c2c-ab63-45f7-8510-e1d14b5d429e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b22aef8d-bf36-4034-95fa-dc9d8cb81e45",
            "6a6824a4-3930-4d77-b64a-23c3272205ab",
            "7d2a2e3f-6a4c-4f6c-9b93-5bbd4b5fd347",
            "f240d199-07de-4e58-a07f-9edf71e22111"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 899,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ebaeb09d-450a-4af0-a7cc-2c367c65905a",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 559,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "7ccbb462-9c44-40cd-896e-eb45b44dd79a",
              "parentUUID": "ebaeb09d-450a-4af0-a7cc-2c367c65905a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 453,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "9f2ce0c8-adef-45b0-be99-fba6968674e9",
              "parentUUID": "ebaeb09d-450a-4af0-a7cc-2c367c65905a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ccbb462-9c44-40cd-896e-eb45b44dd79a",
            "9f2ce0c8-adef-45b0-be99-fba6968674e9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1012,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "137922ac-8174-47b7-abce-d5929e188cef",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "9b9a8542-952f-4987-b82a-016183583efa",
              "parentUUID": "137922ac-8174-47b7-abce-d5929e188cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "09696e0b-e7af-4996-ad6d-23e0e75febb3",
              "parentUUID": "137922ac-8174-47b7-abce-d5929e188cef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b9a8542-952f-4987-b82a-016183583efa",
            "09696e0b-e7af-4996-ad6d-23e0e75febb3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 323,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "277e8a69-18b1-48c7-a8a3-83603aa3e5ab",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 585,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "5c6a565e-afb3-4f81-bc51-8cacf3717e3e",
              "parentUUID": "277e8a69-18b1-48c7-a8a3-83603aa3e5ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9289,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "744f1f9f-cd98-4ea1-bd8b-89c074929515",
              "parentUUID": "277e8a69-18b1-48c7-a8a3-83603aa3e5ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c6a565e-afb3-4f81-bc51-8cacf3717e3e",
            "744f1f9f-cd98-4ea1-bd8b-89c074929515"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9874,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e779ba7a-c17c-4b91-81ed-86da3aef5ce6",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2571,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "a5e59cb3-bc74-4ef8-b325-8b84d7cc8b65",
              "parentUUID": "e779ba7a-c17c-4b91-81ed-86da3aef5ce6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "b34222a2-3ad1-4e6b-b404-f36f595e5d02",
              "parentUUID": "e779ba7a-c17c-4b91-81ed-86da3aef5ce6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2018,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "1c7e1959-4a4c-470f-8676-b004045cc236",
              "parentUUID": "e779ba7a-c17c-4b91-81ed-86da3aef5ce6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5e59cb3-bc74-4ef8-b325-8b84d7cc8b65",
            "b34222a2-3ad1-4e6b-b404-f36f595e5d02",
            "1c7e1959-4a4c-470f-8676-b004045cc236"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13920,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7dbda1a7-f7a8-49bf-a9ec-4f89f884ccd5",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "855ca953-672e-4fcd-8dc3-1300d1e9bce9",
              "parentUUID": "7dbda1a7-f7a8-49bf-a9ec-4f89f884ccd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "8e50aa31-3941-4329-8007-11d0a3c3843d",
              "parentUUID": "7dbda1a7-f7a8-49bf-a9ec-4f89f884ccd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "7a6c5251-49b3-4311-b6f7-f2795ae356ad",
              "parentUUID": "7dbda1a7-f7a8-49bf-a9ec-4f89f884ccd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2620,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "352ac59b-a771-4911-916c-6816a76753a4",
              "parentUUID": "7dbda1a7-f7a8-49bf-a9ec-4f89f884ccd5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "855ca953-672e-4fcd-8dc3-1300d1e9bce9",
            "8e50aa31-3941-4329-8007-11d0a3c3843d",
            "7a6c5251-49b3-4311-b6f7-f2795ae356ad",
            "352ac59b-a771-4911-916c-6816a76753a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3200,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "830aa3b1-086d-41d7-b0c3-210d954584e7",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "4d6901e7-008b-4677-8a1d-7a32b382ca00",
              "parentUUID": "830aa3b1-086d-41d7-b0c3-210d954584e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "8b7d303b-8d07-4695-911d-6692987104ab",
              "parentUUID": "830aa3b1-086d-41d7-b0c3-210d954584e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4362,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:35331/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35331/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35331/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35331/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35331/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35331/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35331/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35331/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35331/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35331/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35331/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35331/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35331/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "60130a5d-2087-4292-a749-d24be6927dc6",
              "parentUUID": "830aa3b1-086d-41d7-b0c3-210d954584e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "9b3de837-7928-4f20-8d60-8880030b344b",
              "parentUUID": "830aa3b1-086d-41d7-b0c3-210d954584e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "1bfa0174-92f3-4221-b074-953e0a3cb88d",
              "parentUUID": "830aa3b1-086d-41d7-b0c3-210d954584e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "9d0253dc-090f-47ae-bfce-c425aa179f63",
              "parentUUID": "830aa3b1-086d-41d7-b0c3-210d954584e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 563,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:35331/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35331/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35331/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35331/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35331/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35331/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35331/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35331/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35331/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35331/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35331/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35331/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35331/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35331/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "477a1bfc-464a-4c41-a65f-278a2b041901",
              "parentUUID": "830aa3b1-086d-41d7-b0c3-210d954584e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4808,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:35331/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35331/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35331/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35331/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35331/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35331/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35331/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35331/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35331/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35331/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35331/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35331/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35331/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3d9ffabb-aaaa-475e-870c-2159c45b1549",
              "parentUUID": "830aa3b1-086d-41d7-b0c3-210d954584e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4946,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:35331/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35331/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35331/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35331/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35331/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35331/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35331/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35331/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35331/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35331/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35331/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35331/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35331/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d00dfb84-d443-4f92-bc68-0fe341f8e0dd",
              "parentUUID": "830aa3b1-086d-41d7-b0c3-210d954584e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4d6901e7-008b-4677-8a1d-7a32b382ca00",
            "8b7d303b-8d07-4695-911d-6692987104ab",
            "9b3de837-7928-4f20-8d60-8880030b344b",
            "1bfa0174-92f3-4221-b074-953e0a3cb88d",
            "9d0253dc-090f-47ae-bfce-c425aa179f63"
          ],
          "failures": [
            "60130a5d-2087-4292-a749-d24be6927dc6",
            "477a1bfc-464a-4c41-a65f-278a2b041901",
            "3d9ffabb-aaaa-475e-870c-2159c45b1549",
            "d00dfb84-d443-4f92-bc68-0fe341f8e0dd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15691,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "826a91bb-242d-4de7-a7c5-5236e8f0e9aa",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4921,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:35331/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35331/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35331/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35331/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35331/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35331/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35331/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35331/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35331/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35331/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35331/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35331/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35331/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "55d6eb77-9089-4fa1-8ea3-c810627a92bc",
              "parentUUID": "826a91bb-242d-4de7-a7c5-5236e8f0e9aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "7e5fbde8-6533-4a8c-b39d-1f51df994ba7",
              "parentUUID": "826a91bb-242d-4de7-a7c5-5236e8f0e9aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4840,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:35331/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35331/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35331/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35331/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35331/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35331/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35331/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35331/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35331/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35331/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35331/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35331/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35331/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4a62618e-91a4-43f2-b71c-cea28602d91f",
              "parentUUID": "826a91bb-242d-4de7-a7c5-5236e8f0e9aa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e5fbde8-6533-4a8c-b39d-1f51df994ba7"
          ],
          "failures": [
            "55d6eb77-9089-4fa1-8ea3-c810627a92bc",
            "4a62618e-91a4-43f2-b71c-cea28602d91f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10359,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "31e242aa-ab65-4f8b-8e53-a7bc8e8c4b95",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 546,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35331/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35331/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35331/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35331/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35331/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35331/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35331/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35331/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35331/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35331/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35331/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35331/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35331/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35331/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "9772fcdc-9fc2-4a6b-a933-c2d31c49e1ae",
              "parentUUID": "31e242aa-ab65-4f8b-8e53-a7bc8e8c4b95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 536,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35331/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35331/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35331/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35331/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35331/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35331/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35331/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35331/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35331/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35331/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35331/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35331/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35331/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35331/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "d095c799-bd2b-4888-acee-91bd0f07dd80",
              "parentUUID": "31e242aa-ab65-4f8b-8e53-a7bc8e8c4b95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9772fcdc-9fc2-4a6b-a933-c2d31c49e1ae",
            "d095c799-bd2b-4888-acee-91bd0f07dd80"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1082,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}